{"version":3,"file":"js/app.5eb35995.js","mappings":"sFACOA,GAAG,O,wEAARC,EAAAA,EAAAA,IAGM,MAHNC,EAGM,CAFWC,EAAAC,U,4BAAfH,EAAAA,EAAAA,IAA6D,U,MAAnCI,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEJ,EAAAC,UAAW,IAAM,OACjCD,EAAAC,W,WAAjBI,EAAAA,EAAAA,IAA6BC,EAAA,CAAAC,IAAA,M,uCCF1BC,MAAM,c,GAEJA,MAAM,iB,GAEJA,MAAM,oB,GACJA,MAAM,sB,GAIRA,MAAM,iB,GAEJA,MAAM,iB,sBAQDA,MAAM,gB,GACNA,MAAM,qB,GAKfA,MAAM,gB,GACJA,MAAM,8BAA8BC,IAAI,iB,SAEXA,IAAI,cAAcD,MAAM,gB,GAE9CA,MAAM,gB,SACmBA,MAAM,iB,GAE3BA,MAAM,wB,GAINA,MAAM,4B,SAMHA,MAAM,gB,aAOtBA,MAAM,mB,GACJA,MAAM,qB,GAEJA,MAAM,mB,GAGCA,MAAM,wB,GAINA,MAAM,4B,SAMHA,MAAM,a,GAKpBA,MAAM,c,GACJA,MAAM,W,uCAWeA,MAAM,gB,GAC3BA,MAAM,kB,8FApFfV,EAAAA,EAAAA,IA6FM,MA7FNC,EA6FM,EA3FJW,EAAAA,EAAAA,IAsBM,MAtBNC,EAsBM,EApBJD,EAAAA,EAAAA,IAIM,MAJNE,EAIM,EAHJF,EAAAA,EAAAA,IAEM,MAFNG,EAEM,EADJC,EAAAA,EAAAA,IAAsDC,EAAA,CAA3CC,QAAShB,EAAAgB,QAAUC,UAAWjB,EAAAiB,W,qCAG7CP,EAAAA,EAAAA,IAcM,MAdNQ,EAcM,EAZJR,EAAAA,EAAAA,IAWM,MAXNS,EAWM,G,aAVJrB,EAAAA,EAAAA,IASMsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IARoBrB,EAAAgB,QAAO,CAAvBM,EAAQC,M,WADlBzB,EAAAA,EAAAA,IASM,OAPHS,IAAKgB,EACLf,OAAKgB,EAAAA,EAAAA,IAAA,eAAAC,OAA2BzB,EAAA0B,cAAgBH,EAAGI,GAAc,IAARJ,KACzDK,aAAUxB,GAAEyB,EAAAC,SAASP,GACrBQ,aAAU5B,EAAA,KAAAA,EAAA,OAAA6B,IAAEH,EAAAI,UAAAJ,EAAAI,YAAAD,K,EAEbtB,EAAAA,EAAAA,IAAqE,OAArEwB,GAAqEC,EAAAA,EAAAA,IAA/B,IAARZ,EAAY,IAAMD,EAAOc,MAAI,IAC3D1B,EAAAA,EAAAA,IAAoE,OAApE2B,EAAgC,OAAGF,EAAAA,EAAAA,IAAGb,EAAOgB,KAAKC,QAAS,KAAE,I,qBAKrE7B,EAAAA,EAAAA,IAuBM,MAvBN8B,EAuBM,EAtBJ9B,EAAAA,EAAAA,IAqBM,MArBN+B,EAqBM,C,aApBJ/B,EAAAA,EAAAA,IAAgB,WAAX,SAAK,IACCV,EAAA0C,aAAaH,S,WAAxBzC,EAAAA,EAAAA,IAiBM,MAjBN6C,EAiBM,G,aAhBJ7C,EAAAA,EAAAA,IAeMsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAfqBrB,EAAA0C,aAAY,CAA1BE,EAAMrB,M,WAAnBzB,EAAAA,EAAAA,IAeM,OAfoCS,IAAKgB,EAAKf,MAAM,gB,EACxDE,EAAAA,EAAAA,IAAkD,OAAlDmC,GAAkDV,EAAAA,EAAAA,IAApBS,EAAKR,MAAO,IAAC,GAC/BQ,EAAKE,MAAMP,S,WAAvBzC,EAAAA,EAAAA,IAWO,OAXPiD,EAWO,G,aAVLjD,EAAAA,EAAAA,IASOsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IATmBuB,EAAKE,MAAK,CAAtBE,EAAGC,M,WAAjBnD,EAAAA,EAAAA,IASO,QATgCS,IAAK0C,EAAOzC,OAAKgB,EAAAA,EAAAA,IAAA,aAAgBK,EAAAqB,aAAaF,EAAEG,S,EACrFzC,EAAAA,EAAAA,IAGO,OAHP0C,EAGO,EAFL1C,EAAAA,EAAAA,IAA6E,QAAvEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEK,OAAK,IACnE3C,EAAAA,EAAAA,IAA2E,QAArEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEG,MAAI,MAEnEzC,EAAAA,EAAAA,IAGO,OAHP4C,EAGO,EAFL5C,EAAAA,EAAAA,IAA6E,QAAvEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEK,OAAK,IACnE3C,EAAAA,EAAAA,IAA2E,QAArEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEG,MAAI,M,2BAIvErD,EAAAA,EAAAA,IAA2C,OAA3CyD,EAAkC,W,0BAGtCzD,EAAAA,EAAAA,IAAmB,MAAA0D,EAAP,O,QAIhB9C,EAAAA,EAAAA,IAmBM,MAnBN+C,EAmBM,EAlBJ/C,EAAAA,EAAAA,IAiBM,MAjBNgD,EAiBM,C,aAhBJhD,EAAAA,EAAAA,IAAwC,OAAnCF,MAAM,mBAAkB,SAAK,KAClCE,EAAAA,EAAAA,IAcM,MAdNiD,EAcM,CAbY3D,EAAA4D,aAAe5D,EAAA4D,YAAYrB,S,aACzCzC,EAAAA,EAAAA,IASOsB,EAAAA,GAAA,CAAAb,IAAA,IAAAc,EAAAA,EAAAA,IATkBrB,EAAA4D,YAAW,CAAtBZ,EAAGzB,M,WAAjBzB,EAAAA,EAAAA,IASO,QATgCS,IAAKgB,EAAMf,OAAKgB,EAAAA,EAAAA,IAAA,aAAgBK,EAAAqB,aAAaF,EAAEG,S,EACpFzC,EAAAA,EAAAA,IAGO,OAHPmD,EAGO,EAFLnD,EAAAA,EAAAA,IAA6E,QAAvEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEK,OAAK,IACnE3C,EAAAA,EAAAA,IAA2E,QAArEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEG,MAAI,MAEnEzC,EAAAA,EAAAA,IAGO,OAHPoD,EAGO,EAFLpD,EAAAA,EAAAA,IAA6E,QAAvEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEK,OAAK,IACnE3C,EAAAA,EAAAA,IAA2E,QAArEF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBK,EAAAqB,aAAaF,EAAEG,U,QAAUH,EAAEG,MAAI,M,wBAIvErD,EAAAA,EAAAA,IAAwC,OAAxCiE,EAA+B,cAKrCrD,EAAAA,EAAAA,IAWM,MAXNsD,EAWM,EAVJtD,EAAAA,EAAAA,IAGM,MAHNuD,EAGM,EAFJvD,EAAAA,EAAAA,IAA0D,UAAjDR,QAAKC,EAAA,KAAAA,EAAA,OAAA6B,IAAEH,EAAAqC,WAAArC,EAAAqC,aAAAlC,IAAYmC,SAAUtC,EAAAuC,SAAS,KAAE,EAAAC,IACjD3D,EAAAA,EAAAA,IAAqD,UAA5CR,QAAKC,EAAA,KAAAA,EAAA,OAAA6B,IAAEH,EAAAyC,MAAAzC,EAAAyC,QAAAtC,IAAOmC,SAAUtC,EAAA0C,SAAS,KAAE,EAAAC,MAE9C1D,EAAAA,EAAAA,IAKE2D,EAAA,CAJCnC,KAAMtC,EAAAgB,QAAQ0D,KAAKhD,aAAaY,KAChCqC,gBAAiB3E,EAAA2E,gBACjBzB,aAAcrB,EAAAqB,aACd0B,eAAc/C,EAAAgD,c,qEAGG,OAAX7E,EAAA8E,S,WAAXhF,EAAAA,EAAAA,IAKM,MALNiF,EAKM,EAJJrE,EAAAA,EAAAA,IAGM,MAHNsE,EAGM,EAFJtE,EAAAA,EAAAA,IAAwC,WAAnC,OAAGyB,EAAAA,EAAAA,IAAGnC,EAAAgB,QAAQhB,EAAA8E,QAAQ1C,MAAI,IAC/B1B,EAAAA,EAAAA,IAAwC,UAA/BR,QAAKC,EAAA,KAAAA,EAAA,OAAA6B,IAAEH,EAAAoD,WAAApD,EAAAoD,aAAAjD,KAAW,c,eAIH,OAAjBhC,EAAAkF,e,WAAXpF,EAAAA,EAAAA,IAEM,O,MAF6BqF,OAAKC,EAAAA,EAAAA,IAAEpF,EAAAqF,gBAAgB7E,MAAM,sB,EAC9DM,EAAAA,EAAAA,IAAkG2D,EAAA,CAAvFnC,KAAMtC,EAAAgB,QAAQhB,EAAAkF,cAAc5C,KAAOqC,gBAAiB,GAAKzB,aAAcrB,EAAAqB,c,8FCrFjF,MAAMoC,EAAQ,CAAC,IAAI,IAAI,IAAI,KAMrBC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAMjF,SAASC,IACd,MAAMC,EAAO,GACb,IAAK,MAAMtC,KAAQmC,EACjB,IAAK,MAAMjC,KAASkC,EAClBE,EAAKC,KAAK,CAAEvC,OAAME,UAGtB,OAAOoC,CACT,CAOO,SAASE,EAAQF,GACtB,IAAK,IAAIG,EAAIH,EAAKlD,OAAS,EAAGqD,EAAI,EAAGA,IAAK,CACxC,MAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,KACzCH,EAAKG,GAAIH,EAAKI,IAAM,CAACJ,EAAKI,GAAIJ,EAAKG,GACtC,CACA,OAAOH,CACT,CAOO,SAASQ,EAAKR,GACnB,MAAMS,EAAQ,CAAC,GAAI,GAAI,GAAI,IAC3B,IAAK,IAAIN,EAAI,EAAGA,EAAIH,EAAKlD,OAAQqD,IAC/BM,EAAMN,EAAI,GAAGF,KAAKD,EAAKG,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrBM,EAAMN,GAAGO,KAAK,CAACC,EAAGC,IAAMd,EAAWe,QAAQF,EAAE/C,OAASkC,EAAWe,QAAQD,EAAEhD,QAE7E,OAAO6C,CACT,C,sECjDO,SAASK,EAAYH,EAAGC,GAC7B,OAAOd,EAAWe,QAAQF,EAAE/C,OAASkC,EAAWe,QAAQD,EAAEhD,MAC5D,CAQO,SAASmD,EAAYC,EAAeC,GAEzC,IAAKD,GAA0C,IAAzBA,EAAclE,OAAc,OAAO,EACzD,MAAMoE,EAAOC,EAAYH,GACzB,GAAa,YAATE,EAAoB,OAAO,EAE/B,IAAKD,GAAkC,IAArBA,EAAUnE,OAAc,OAAO,EACjD,MAAMsE,EAAWD,EAAYF,GAE7B,GAAa,SAATC,GAAgC,SAAbE,EAAqB,OAAO,EACnD,GAAa,WAATF,GAAkC,SAAbE,GAAoC,WAAbA,EAAuB,OAAO,EAC9E,GAAIF,IAASE,EAAU,OAAO,EAE9B,GAAIJ,EAAclE,SAAWmE,EAAUnE,OAAQ,OAAO,EAEtD,MAAMuE,EAAYC,EAAUN,GACtBO,EAAaD,EAAUL,GAE7B,OAAOH,EAAYO,EAAU,GAAIE,EAAW,IAAM,CACpD,CAEO,SAASD,EAAUjE,GACxB,OAAOA,EAAMmE,QAAQd,KAAKI,EAC5B,CAGO,SAASK,EAAY9D,GAC1B,OAAqB,IAAjBA,EAAMP,QAAgBO,EAAM,GAAGO,QAAUP,EAAM,GAAGO,MAAc,OAC/C,IAAjBP,EAAMP,QAAgBO,EAAM,GAAGO,QAAUP,EAAM,GAAGO,OAASP,EAAM,GAAGO,QAAUP,EAAM,GAAGO,MAAc,SACpF,IAAjBP,EAAMP,QAAgBO,EAAM,GAAGO,QAAUP,EAAM,GAAGO,OAASP,EAAM,GAAGO,QAAUP,EAAM,GAAGO,OAASP,EAAM,GAAGO,QAAUP,EAAM,GAAGO,MAAc,OAC1I6D,EAAWpE,GAAe,WAC1BqE,EAAiBrE,GAAe,iBACf,IAAjBA,EAAMP,OAAqB,SACxB,SACT,CAIA,SAAS2E,EAAWpE,GAClB,GAAIA,EAAMP,OAAS,EAAG,OAAO,EAC7B,MAAM6E,EAAOtE,EAAMuE,IAAIrE,GAAKuC,EAAWe,QAAQtD,EAAEK,QAAQ8C,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAC5E,IAAK,IAAIT,EAAI,EAAGA,EAAIwB,EAAK7E,OAAQqD,IAC/B,GAAIwB,EAAKxB,GAAKwB,EAAKxB,EAAI,KAAO,EAAG,OAAO,EAE1C,OAAO,CACT,CAKA,SAASuB,EAAiBrE,GACxB,GAAIA,EAAMP,OAAS,GAAKO,EAAMP,OAAS,IAAM,EAAG,OAAO,EACvD,MAAM+E,EAASxE,EAAMmE,QAAQd,KAAKI,GAClC,IAAK,IAAIX,EAAI,EAAGA,EAAI0B,EAAO/E,OAAQqD,GAAK,EAAG,CACzC,GAAI0B,EAAO1B,GAAGvC,QAAUiE,EAAO1B,EAAI,GAAGvC,MAAO,OAAO,EACpD,GAAIuC,EAAI,EAAG,CAET,MAAM2B,EAAOhC,EAAWe,QAAQgB,EAAO1B,GAAGvC,OAEpCmE,EAAOjC,EAAWe,QAAQgB,EAAO1B,EAAI,GAAGvC,OAE9C,GAAIkE,EAAOC,IAAS,EAAG,OAAO,CAChC,CACF,CACA,OAAO,CACT,CClEO,SAASC,EAAOnF,EAAMoE,EAAY,GAAIgB,EAAY1G,EAAU,GAAI2G,EAAc,EAAGjF,EAAe,IAErG,MAAMkF,EAAQF,EAAa,EAAI,EAC/B,IAAKpF,GAAwB,IAAhBA,EAAKC,OAAc,MAAO,GACvC,MAAM+E,EAASP,EAAUzE,GAGnBuF,EAAkBC,GAA6BH,EAAa3G,EAAS0B,GACrEqF,EAAgBC,GAAmBL,EAAa3G,EAAQuB,QAAU,GAClE0F,EAAsBjH,GAAWA,EAAQ+G,GAAiB/G,EAAQ+G,GAAezF,KAAKC,OAAS,GAC/F2F,GAAiBP,EAAc3G,EAAQuB,OAAS,GAAKvB,EAAQuB,OAC7D4F,EAAanH,GAAWA,EAAQkH,GAAiBlH,EAAQkH,GAAiB,KAC1EE,EAAuBP,EAAgBQ,SAASH,GAChDI,EAAsBH,EAAaA,EAAW7F,KAAKC,OAAS,GAG5DgG,EAASC,GAAiBlB,EAAQM,EAAOtF,EAAKC,QAC9CkG,EAAUF,EAAOG,OAAO1F,GAAkB,IAAbA,EAAET,QAAgBoG,EAAS3F,IACxD4F,EAAQL,EAAOG,OAAO1F,GAAkB,IAAbA,EAAET,QAAgBsG,EAAO7F,IACpD8F,EAAYP,EAAOG,OAAO1F,GAAKA,EAAET,QAAU,GAAKwG,GAAe/F,IAC/DgG,EAAkBT,EAAOG,OAAO1F,GAAKA,EAAET,QAAU,GAAK0G,GAAqBjG,IAC3EkG,EAAQX,EAAOG,OAAO1F,GAAkB,IAAbA,EAAET,QAAgB4G,EAAOnG,IACpDoG,EAAUb,EAAOG,OAAO1F,GAAkB,IAAbA,EAAET,QAIrC,GAAImE,GAAaA,EAAUnE,OAAS,GAAK6F,GAAwBE,GAAuB,EAEtF,MAAO,GAGT,KAAM5B,GAAkC,IAArBA,EAAUnE,SAAiBsF,EAAgBwB,KAAK9H,GAAOP,EAAQO,GAAKe,KAAKC,QAAU,GACpG,OAAI6G,EAAQ7G,OAAS,EAAU6G,EAAQ,GACnCF,EAAM3G,OAAS,EAAU2G,EAAM,GAE/BJ,EAAUvG,OAAS,EAAUuG,EAAU,GACvCE,EAAgBzG,OAAS,EAAUyG,EAAgB,GACnDP,EAAQlG,OAAS,EAAUkG,EAAQ,GACnCG,EAAMrG,OAAS,EAAUqG,EAAM,GAC5B,CAACtB,EAAO,IAGjB,GAAIW,GAAuB,EAAG,CAE5B,GAAIvB,GAAaA,EAAUnE,OAAS,EAAG,CACrC,IAAK,MAAMS,KAAKuF,EACd,GAAI/B,EAAYxD,EAAG0D,GAAY,OAAO1D,EAExC,MAAO,EACT,CAEA,OAAIkG,EAAM3G,OAAS,EAAU2G,EAAM,GAC/BJ,EAAUvG,OAAS,EAAUuG,EAAU,GACvCE,EAAgBzG,OAAS,EAAUyG,EAAgB,GACnDI,EAAQ7G,OAAS,EAAU6G,EAAQ,GACnCX,EAAQlG,OAAS,EAAUkG,EAAQ,GACnCG,EAAMrG,OAAS,EAAUqG,EAAM,GAC5B,CAACtB,EAAO,GACjB,CAGA,GAAIZ,GAAaA,EAAUnE,OAAS,EAAG,CAErC,GAAIoG,EAASjC,GAAY,CAEvB,GAAIkB,GAAS,EAAG,CACd,IAAK,MAAMvB,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,EAExC,MAAO,EACT,CACA,IAAK,MAAMiD,KAAKb,EACd,GAAIjC,EAAY8C,EAAG5C,GAAY,OAAO4C,EAExC,IAAK,MAAMjD,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,EAExC,MAAO,EACT,CAEA,GAAIuB,GAAS,IAAM2B,GAAe7C,IAAc8C,GAAqB9C,IAAa,CAChF,IAAK,MAAM4C,KAAKb,EACd,GAAIjC,EAAY8C,EAAG5C,GAAY,OAAO4C,EAExC,IAAK,MAAMjD,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,CAE1C,CAEA,GAAIwC,EAAOnC,GAAY,CACrB,IAAK,MAAML,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,EAExC,MAAO,EACT,CAEA,GAAI0C,GAAerC,GAAY,CAE7B,IAAK,MAAM+C,KAAKX,EACd,GAAItC,EAAYiD,EAAG/C,GAAY,OAAO+C,EAGxC,MAAMC,EAAgBC,GAA6BjD,EAAWY,GAC9D,GAAIoC,EAAe,OAAOA,EAE1B,IAAK,MAAMrD,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,EAExC,MAAO,EACT,CAEA,GAAI4C,GAAqBvC,GAAY,CAEnC,IAAK,MAAMkD,KAAMZ,EACf,GAAIxC,EAAYoD,EAAIlD,GAAY,OAAOkD,EAGzC,MAAMC,EAAsBC,GAAmCpD,EAAWY,GAC1E,GAAIuC,EAAqB,OAAOA,EAEhC,IAAK,MAAMxD,KAAKuC,EACd,GAAIpC,EAAYH,EAAGK,GAAY,OAAOL,EAExC,MAAO,EACT,CAEA,IAAK,MAAMrD,KAAKuF,EACd,IAAKM,EAAO7F,KAAO2F,EAAS3F,IAAMwD,EAAYxD,EAAG0D,KAC1CqD,GAAuB/G,EAAGsE,EAAQiB,KAEpB,IAAbvF,EAAET,QAA6B,IAAbS,EAAET,QAAc,OAAOS,EAKnD,IAAK,MAAMA,KAAKuF,EACd,IAAKM,EAAO7F,IAAMwD,EAAYxD,EAAG0D,KAC1BqD,GAAuB/G,EAAGsE,EAAQiB,GACrC,OAAOvF,EAKb,IAAK,MAAMA,KAAKuF,EACd,GAAI/B,EAAYxD,EAAG0D,GAAY,OAAO1D,EAExC,MAAO,EACT,CAGA,GAAIV,EAAKC,OAAS,EAAG,CAEnB,GAAIqF,GAAS,EAAG,CACd,GAAIkB,EAAUvG,OAAS,EAAG,OAAOuG,EAAU,GAC3C,GAAIE,EAAgBzG,OAAS,EAAG,OAAOyG,EAAgB,GACvD,GAAIE,EAAM3G,OAAS,EAAG,OAAO2G,EAAM,GACnC,GAAIE,EAAQ7G,OAAS,EAAG,OAAO6G,EAAQ,GACvC,GAAIX,EAAQlG,OAAS,EAAG,OAAOkG,EAAQ,GACvC,GAAIG,EAAMrG,OAAS,EAAG,OAAOqG,EAAM,GAEnC,MAAMoB,EAAaC,GAAiD3C,GACpE,GAAI0C,EAAY,OAAOA,CACzB,KAAO,CACL,GAAIlB,EAAUvG,OAAS,EAAG,OAAOuG,EAAU,GAC3C,GAAIE,EAAgBzG,OAAS,EAAG,OAAOyG,EAAgB,GACvD,GAAIP,EAAQlG,OAAS,EAAG,OAAOkG,EAAQ,GACvC,GAAIS,EAAM3G,OAAS,EAAG,OAAO2G,EAAM,GACnC,GAAIE,EAAQ7G,OAAS,EAAG,OAAO6G,EAAQ,GACvC,GAAIR,EAAMrG,OAAS,EAAG,OAAOqG,EAAM,GAEnC,MAAMoB,EAAaC,GAAiD3C,GACpE,GAAI0C,EAAY,OAAOA,CACzB,CACA,MAAO,CAAC1C,EAAO,GACjB,CAAO,CAEL,GAAI8B,EAAQ7G,OAAS,EAAG,OAAO6G,EAAQ,GACvC,GAAIF,EAAM3G,OAAS,EAAG,OAAO2G,EAAM,GACnC,GAAIT,EAAQlG,OAAS,EAAG,OAAOkG,EAAQ,GACvC,GAAIK,EAAUvG,OAAS,EAAG,OAAOuG,EAAU,GAC3C,GAAIE,EAAgBzG,OAAS,EAAG,OAAOyG,EAAgB,GACvD,GAAIJ,EAAMrG,OAAS,EAAG,OAAOqG,EAAM,GAEnC,MAAMoB,EAAaC,GAAiD3C,GACpE,OAAI0C,GACG,CAAC1C,EAAO,GACjB,CACF,CAGA,SAASuB,EAAO/F,GACd,OAAwB,IAAjBA,EAAMP,QAAgBO,EAAMoH,MAAMlH,GAAKA,EAAEK,QAAUP,EAAM,GAAGO,MACrE,CAEA,SAASsF,EAAS7F,GAChB,OAAwB,IAAjBA,EAAMP,QAAgBO,EAAMoH,MAAMlH,GAAKA,EAAEK,QAAUP,EAAM,GAAGO,MACrE,CAEA,SAAS8F,EAAOrG,GACd,OAAwB,IAAjBA,EAAMP,QAAgBO,EAAM,GAAGO,QAAUP,EAAM,GAAGO,KAC3D,CAGA,SAAS0G,GAAuBI,EAAO7H,EAAM8H,GAC3C,IAAK,MAAMC,KAAWD,EACpB,GAAIC,EAAQhB,KAAKiB,GAAQH,EAAM9B,SAASiC,MAAWC,GAAYF,EAASF,GAAQ,OAAO,EAEzF,OAAO,CACT,CAEA,SAASI,GAAYnE,EAAGC,GACtB,GAAID,EAAE7D,SAAW8D,EAAE9D,OAAQ,OAAO,EAClC,IAAK,IAAIqD,EAAI,EAAGA,EAAIQ,EAAE7D,OAAQqD,IAC5B,GAAIQ,EAAER,KAAOS,EAAET,GAAI,OAAO,EAE5B,OAAO,CACT,CAWA,SAAS4C,GAAiBlG,EAAMsF,EAAO4C,GACrC,MAAMjC,EAAS,GACTkC,EAAY,IAAIC,IAGhB9B,EAAQ+B,GAAUrI,EAAMmI,GAC9B7B,EAAMgC,QAAQC,GAAQA,EAAKD,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAE7E,MAAMoF,EAAUsC,GAAYzI,EAAMmI,GAClChC,EAAQmC,QAAQI,GAAUA,EAAOJ,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAGnF,MAAMyF,EAAYmC,GAAc3I,EAAMmI,GACtC3B,EAAU8B,QAAQM,GAAYA,EAASN,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAGzF,MAAM2F,EAAkBmC,GAAoB7I,EAAMmI,GAClDzB,EAAgB4B,QAAQhB,GAAMA,EAAGgB,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAGnF,MAAM6F,EAAQkC,GAAU9I,EAAMmI,GAC9BvB,EAAM0B,QAAQS,GAAQA,EAAKT,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAG7E,MAAM+F,EAAUkC,GAAYhJ,EAAMmI,GAYlC,OAXArB,EAAQwB,QAAQW,GAAUA,EAAOX,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,WAGnFkF,EAAO7C,QAAQoD,KAAcE,KAAoBE,KAAUE,IAEvDxB,EAAQ,GAAK4C,GAAY,IAC3BjC,EAAO7C,QAAQ+C,KAAYG,GAKtBL,CACT,CAGA,SAAS0C,GAAc3I,EAAMmI,GAC3B,MAAM3B,EAAY,GAClB,IAAK,IAAI0C,EAAM,EAAGA,GAAOlJ,EAAKC,OAAQiJ,IACpC,IAAK,IAAI5F,EAAI,EAAGA,GAAKtD,EAAKC,OAASiJ,EAAK5F,IAAK,CAC3C,MAAMqB,EAAQ3E,EAAK2E,MAAMrB,EAAGA,EAAI4F,IAC5BzC,GAAe9B,IAAWwE,GAAgBxE,IAAWyE,GAAazE,EAAOwD,KAC3E3B,EAAUpD,KAAKuB,GAEfA,EAAM2D,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,UAE5D,CAEF,OAAOyF,CACT,CAGA,SAASqC,GAAoB7I,EAAMmI,GACjC,MAAMzB,EAAkB,GACxB,IAAK,IAAIwC,EAAM,EAAGA,GAAOlJ,EAAKC,OAAQiJ,GAAO,EAC3C,IAAK,IAAI5F,EAAI,EAAGA,GAAKtD,EAAKC,OAASiJ,EAAK5F,IAAK,CAC3C,MAAMqB,EAAQ3E,EAAK2E,MAAMrB,EAAGA,EAAI4F,IAC5BvC,GAAqBhC,IAAWwE,GAAgBxE,IAAWyE,GAAazE,EAAOwD,KACjFzB,EAAgBtD,KAAKuB,GACrBA,EAAM2D,QAAQN,GAAQG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,UAE5D,CAEF,OAAO2F,CACT,CAGA,SAASoC,GAAU9I,EAAMmI,GACvB,MAAMvB,EAAQ,GACd,IAAK,IAAItD,EAAI,EAAGA,EAAItD,EAAKC,OAAS,EAAGqD,IAC/BtD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAAUqI,GAAa,CAACpJ,EAAKsD,GAAItD,EAAKsD,EAAI,IAAK6E,KAC/EvB,EAAMxD,KAAK,CAACpD,EAAKsD,GAAItD,EAAKsD,EAAI,KAC9B6E,EAAUK,IAAI,GAAGxI,EAAKsD,GAAGzC,OAAOb,EAAKsD,GAAGvC,SACxCoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,UAGpD,OAAO6F,CACT,CAGA,SAASoC,GAAYhJ,EAAMmI,GACzB,MAAMrB,EAAU,GAChB,IAAK,MAAMkB,KAAQhI,EACZoJ,GAAa,CAACpB,GAAOG,KACxBrB,EAAQ1D,KAAK,CAAC4E,IACdG,EAAUK,IAAI,GAAGR,EAAKnH,OAAOmH,EAAKjH,UAGtC,OAAO+F,CACT,CAGA,SAAS2B,GAAYzI,EAAMmI,GACzB,MAAMhC,EAAU,GAChB,IAAK,IAAI7C,EAAI,EAAGA,EAAItD,EAAKC,OAAS,EAAGqD,IAC/BtD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAASf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OACpEqI,GAAa,CAACpJ,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,IAAK6E,KACrDhC,EAAQ/C,KAAK,CAACpD,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,KAC7C6E,EAAUK,IAAI,GAAGxI,EAAKsD,GAAGzC,OAAOb,EAAKsD,GAAGvC,SACxCoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,SAChDoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,UAGpD,OAAOoF,CACT,CAGA,SAASkC,GAAUrI,EAAMmI,GACvB,MAAM7B,EAAQ,GACd,IAAK,IAAIhD,EAAI,EAAGA,EAAItD,EAAKC,OAAS,EAAGqD,IAC/BtD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAASf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OACrEf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAAUqI,GAAa,CAACpJ,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,IAAK6E,KACzG7B,EAAMlD,KAAK,CAACpD,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,KACxD6E,EAAUK,IAAI,GAAGxI,EAAKsD,GAAGzC,OAAOb,EAAKsD,GAAGvC,SACxCoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,SAChDoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,SAChDoH,EAAUK,IAAI,GAAGxI,EAAKsD,EAAI,GAAGzC,OAAOb,EAAKsD,EAAI,GAAGvC,UAGpD,OAAOuF,CACT,CAGA,SAASe,GAA6BjD,EAAWpE,GAE/C,MAAMqJ,EAAYjF,EAAUnE,OAE5B,IAAK,IAAIqD,EAAI,EAAGA,GAAKtD,EAAKC,OAASoJ,EAAW/F,IAAK,CACjD,MAAMqB,EAAQ3E,EAAK2E,MAAMrB,EAAGA,EAAI+F,GAChC,GAAI5C,GAAe9B,IAAUT,EAAYS,EAAOP,GAC9C,OAAOO,CAEX,CAGA,MAAM2E,EAAYC,GAAqBvJ,EAAMqJ,GAC7C,IAAK,MAAMxB,KAASyB,EAClB,GAAIpF,EAAY2D,EAAOzD,GACrB,OAAOyD,EAGX,OAAO,IACT,CAEA,SAAS0B,GAAqBvJ,EAAMkJ,GAClC,MAAMM,EAAU,GAEhB,SAASC,EAAIC,EAAMC,GACjB,GAAID,EAAKzJ,SAAWiJ,EAIpB,IAAK,IAAI5F,EAAIqG,EAAOrG,EAAItD,EAAKC,OAAQqD,IAE/BoG,EAAKzJ,OAAS,GAAKD,EAAKsD,GAAGvC,QAAU2I,EAAKA,EAAKzJ,OAAS,GAAGc,QAC/D2I,EAAKtG,KAAKpD,EAAKsD,IACfmG,EAAIC,EAAMpG,EAAI,GACdoG,EAAKE,YARDnD,GAAeiD,IAAOF,EAAQpG,KAAK,IAAIsG,GAU/C,CAEA,OADAD,EAAI,GAAI,GACDD,CACT,CAGA,SAAShC,GAAmCpD,EAAWpE,GAErD,MAAMqJ,EAAYjF,EAAUnE,OAE5B,IAAK,IAAIqD,EAAI,EAAGA,GAAKtD,EAAKC,OAASoJ,EAAW/F,IAAK,CACjD,MAAMqB,EAAQ3E,EAAK2E,MAAMrB,EAAGA,EAAI+F,GAChC,GAAI1C,GAAqBhC,IAAUT,EAAYS,EAAOP,GACpD,OAAOO,CAEX,CAGA,MAAM2E,EAAYO,GAA2B7J,EAAMqJ,GACnD,IAAK,MAAMxB,KAASyB,EAClB,GAAIpF,EAAY2D,EAAOzD,GACrB,OAAOyD,EAGX,OAAO,IACT,CAEA,SAASgC,GAA2B7J,EAAMkJ,GACxC,MAAMM,EAAU,GAEhB,SAASC,EAAIC,EAAMC,GACjB,GAAID,EAAKzJ,SAAWiJ,GAIpB,IAAK,IAAI5F,EAAIqG,EAAOrG,EAAItD,EAAKC,OAAQqD,IAEnC,GAAIA,EAAI,EAAItD,EAAKC,QAAUD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,MAAO,CAE9D,GAAI2I,EAAKzJ,OAAS,GAAKD,EAAKsD,GAAGvC,QAAU2I,EAAKA,EAAKzJ,OAAS,GAAGc,MAAO,SACtE2I,EAAKtG,KAAKpD,EAAKsD,GAAItD,EAAKsD,EAAI,IAC5BmG,EAAIC,EAAMpG,EAAI,GACdoG,EAAKE,MACLF,EAAKE,KACP,OAZIjD,GAAqB+C,IAAOF,EAAQpG,KAAK,IAAIsG,GAcrD,CAEA,OADAD,EAAI,GAAI,GACDD,CACT,CAGA,SAAS7B,GAAiD3H,GAExD,MAAMmG,EAAU,GACVG,EAAQ,GACd,IAAK,IAAIhD,EAAI,EAAGA,EAAItD,EAAKC,OAAS,EAAGqD,IAC/BtD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAASf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OACvEoF,EAAQ/C,KAAK,CAACpD,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,KAGjD,IAAK,IAAIA,EAAI,EAAGA,EAAItD,EAAKC,OAAS,EAAGqD,IAC/BtD,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAASf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAASf,EAAKsD,GAAGvC,QAAUf,EAAKsD,EAAI,GAAGvC,OAC9GuF,EAAMlD,KAAK,CAACpD,EAAKsD,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,GAAItD,EAAKsD,EAAI,KAK5D,IAAK,MAAMwG,IAAS,IAAI3D,KAAYG,GAElC,IAAK,IAAIyD,EAAO,EAAGA,GAAQ,GAAKD,EAAM7J,QAAU,EAAG8J,IAAQ,CAEzD,MAAMC,EAAO,GACPC,EAAU,GAChB,IAAIC,EAAO,IAAIC,MAAMnK,EAAKC,QAAQmK,MAAK,GAEvC,IAAK,IAAI7G,EAAI,EAAG8G,EAAI,EAAG9G,EAAIvD,EAAKC,OAAQsD,IAClC8G,EAAIP,EAAM7J,QAAUD,EAAKuD,KAAOuG,EAAMO,IACpCN,EAAQ,GAAKM,GACfJ,EAAQ7G,KAAKpD,EAAKuD,IAClB2G,EAAK3G,IAAK,GAEVyG,EAAK5G,KAAKpD,EAAKuD,IAEjB8G,KACUH,EAAK3G,IACfyG,EAAK5G,KAAKpD,EAAKuD,IAInB,MAAM+G,EAAU,IAAIL,KAAYD,GAEhC,IAAK,IAAId,EAAM,EAAGA,GAAOoB,EAAQrK,OAAQiJ,IACvC,IAAK,IAAI5F,EAAI,EAAGA,GAAKgH,EAAQrK,OAASiJ,EAAK5F,IAAK,CAC9C,MAAMqB,EAAQ2F,EAAQ3F,MAAMrB,EAAGA,EAAI4F,GACnC,GAAIzC,GAAe9B,GAEjB,OAAOA,CAEX,CAGF,IAAK,IAAIuE,EAAM,EAAGA,GAAOoB,EAAQrK,OAAQiJ,GAAO,EAC9C,IAAK,IAAI5F,EAAI,EAAGA,GAAKgH,EAAQrK,OAASiJ,EAAK5F,IAAK,CAC9C,MAAMqB,EAAQ2F,EAAQ3F,MAAMrB,EAAGA,EAAI4F,GACnC,GAAIvC,GAAqBhC,GAEvB,OAAOA,CAEX,CAEJ,CAEF,OAAO,IACT,CAGA,SAASwE,GAAgB3I,GACvB,MAAM+J,EAAQ,IAAInC,IAClB,IAAK,MAAMJ,KAAQxH,EAAO,CACxB,GAAI+J,EAAMC,IAAIxC,EAAKnH,MAAO,OAAO,EACjC0J,EAAM/B,IAAIR,EAAKnH,KACjB,CACA,OAAO,CACT,CAGA,SAASuI,GAAa5I,EAAO2H,GAC3B,IAAK,MAAMH,KAAQxH,EACjB,GAAI2H,EAAUqC,IAAI,GAAGxC,EAAKnH,OAAOmH,EAAKjH,SAAU,OAAO,EAEzD,OAAO,CACT,CAGA,SAAS0F,GAAejG,GACtB,GAAIA,EAAMP,OAAS,EAAG,OAAO,EAC7B,IAAK,IAAIqD,EAAI,EAAGA,EAAI9C,EAAMP,OAAQqD,IAAK,CACrC,GAAI9C,EAAM8C,GAAGvC,QAAUP,EAAM8C,EAAI,GAAGvC,MAAO,OAAO,EAClD,GAAIP,EAAM8C,GAAGvC,MAAM0J,WAAW,GAAKjK,EAAM8C,EAAI,GAAGvC,MAAM0J,WAAW,KAAO,EAAG,OAAO,CACpF,CACA,OAAO,CACT,CAGA,SAAS9D,GAAqBnG,GAC5B,GAAIA,EAAMP,OAAS,GAAKO,EAAMP,OAAS,IAAM,EAAG,OAAO,EACvD,IAAK,IAAIqD,EAAI,EAAGA,EAAI9C,EAAMP,OAAQqD,GAAK,EAAG,CACxC,GAAI9C,EAAM8C,GAAGvC,QAAUP,EAAM8C,EAAI,GAAGvC,MAAO,OAAO,EAClD,GAAIuC,EAAI,GACF9C,EAAM8C,GAAGvC,MAAM0J,WAAW,GAAKjK,EAAM8C,EAAI,GAAGvC,MAAM0J,WAAW,KAAO,EAAG,OAAO,CAEtF,CACA,OAAO,CACT,CAGA,SAASxD,GAAezG,GACtB,OAAOiG,GAAejG,IAAUA,EAAMP,QAAU,CAClD,CAGA,SAASiH,GAAqB1G,GAC5B,OAAOmG,GAAqBnG,IAAUA,EAAMP,QAAU,CACxD,CASA,SAASuF,GAA6BH,EAAa3G,EAAS0B,GAE1D,IAAIsK,EAAc,KAClB,IAAK,IAAIpH,EAAI,EAAGA,EAAI5E,EAAQuB,OAAQqD,IAClC,GAAI5E,EAAQ4E,GAAGtD,KAAK+G,KAAKiB,GAAsB,MAAdA,EAAKnH,MAA+B,MAAfmH,EAAKjH,OAAgB,CACzE2J,EAAcpH,EACd,KACF,CAGF,GAAoB,OAAhBoH,GAAwBtK,GAAgBA,EAAaH,OACvD,IAAK,MAAM0K,KAAQvK,EACjB,GAAIuK,EAAKnK,OAASmK,EAAKnK,MAAMuG,KAAKiB,GAAsB,MAAdA,EAAKnH,MAA+B,MAAfmH,EAAKjH,OAAgB,CAElF2J,EAAchM,EAAQkM,UAAUC,GAAKA,EAAE/K,OAAS6K,EAAK7K,MACrD,KACF,CAIJ,GAAoB,OAAhB4K,EAAsB,CAExB,MAAMnF,EAAkB7G,EACrBqG,IAAI,CAAC8F,EAAG5L,IAAQA,GAChBmH,OAAOnH,IAAQP,EAAQO,GAAK6L,UAAY7L,IAAQyL,IAAgBzL,IAAQoG,GAC3E,OAAOE,CACT,CAEA,MAAO,EACT,CAGA,SAASG,GAAmBqF,EAAcC,GACxC,OAAQD,EAAe,GAAKC,CAC9B,C,UCrmBO9M,MAAM,c,mBAUCA,MAAM,wB,IAINA,MAAM,4B,2CAdlBV,EAAAA,EAAAA,IAoBM,MApBNC,GAoBM,EAnBJW,EAAAA,EAAAA,IAkBM,OAlBDF,MAAM,OAAOC,IAAI,SAAU0E,OAAKC,EAAAA,EAAAA,IAAA,CAAAmI,MAAW1L,EAAA2L,UAAY,Q,gBAC1D1N,EAAAA,EAAAA,IAgBOsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAhBmBoM,EAAAnL,KAAI,CAAhBgI,EAAM1E,M,WAApB9F,EAAAA,EAAAA,IAgBO,QAhB0BS,IAAKqF,EACnCpF,OAAKgB,EAAAA,EAAAA,IAAA,EAAAkM,SAAeD,EAAA9I,gBAAgB0D,SAASzC,IAAM6H,EAAAvK,aAAaoH,EAAKnH,MAAO,cAC5EjD,QAAKE,GAAEyB,EAAAgD,aAAae,GACpBT,OAAKC,EAAAA,EAAAA,IAAA,C,KAAuB,GAADQ,EAAC,K,OAAkCA,K,EAK/DlF,EAAAA,EAAAA,IAGO,OAHPE,GAGO,EAFLF,EAAAA,EAAAA,IAAmF,QAA7EF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBiM,EAAAvK,aAAaoH,EAAKnH,U,QAAUmH,EAAKjH,OAAK,IACzE3C,EAAAA,EAAAA,IAAiF,QAA3EF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBiM,EAAAvK,aAAaoH,EAAKnH,U,QAAUmH,EAAKnH,MAAI,MAEzEzC,EAAAA,EAAAA,IAGO,OAHPG,GAGO,EAFLH,EAAAA,EAAAA,IAAmF,QAA7EF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,eAAuBiM,EAAAvK,aAAaoH,EAAKnH,U,QAAUmH,EAAKjH,OAAK,IACzE3C,EAAAA,EAAAA,IAAiF,QAA3EF,OAAKgB,EAAAA,EAAAA,IAAA,CAAC,cAAsBiM,EAAAvK,aAAaoH,EAAKnH,U,QAAUmH,EAAKnH,MAAI,M,qBAQjF,QACEf,KAAM,WACNuL,MAAO,CACLrL,KAAMmK,MACN9H,gBAAiB8H,MACjBvJ,aAAc0K,UAEhBC,MAAO,CAAC,gBACRC,SAAU,CACRN,SAAAA,GAEE,OAAK9I,KAAKpC,MAA6B,IAArBoC,KAAKpC,KAAKC,OACH,IAArBmC,KAAKpC,KAAKC,OAAqB,GAC5B,GAA8B,IAAxBmC,KAAKpC,KAAKC,OAAS,GAFiB,CAGnD,GAEFwL,QAAS,CACPlJ,YAAAA,CAAae,GACXlB,KAAKsJ,MAAM,eAAgBpI,EAC7B,I,WCrCJ,MAAMqI,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,UCROzN,MAAM,Y,IAEJA,MAAM,kB,IACJA,MAAM,gB,IAGNA,MAAM,gB,2CANfV,EAAAA,EAAAA,IAUM,MAVNC,GAUM,C,aATJW,EAAAA,EAAAA,IAAqC,OAAhCF,MAAM,kBAAiB,OAAG,KAC/BE,EAAAA,EAAAA,IAOM,MAPNC,GAOM,EANJD,EAAAA,EAAAA,IAEM,MAFNE,GAEM,G,aADJd,EAAAA,EAAAA,IAAyEsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAAvDoM,EAAAxM,UAALiN,K,WAAbpO,EAAAA,EAAAA,IAAyE,QAA3CS,IAAK2N,EAAG1N,MAAM,iB,QAAkB0N,GAAC,K,SAEjExN,EAAAA,EAAAA,IAEM,MAFNG,GAEM,G,aADJf,EAAAA,EAAAA,IAAsGsB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAApFoM,EAAAxM,UAALiN,K,WAAbpO,EAAAA,EAAAA,IAAsG,QAAxES,IAAK2N,EAAG1N,MAAM,mB,QAAoBqB,EAAAsM,iBAAiBV,EAAAzM,QAASkN,IAAC,K,YCP5F,MAAM3I,GAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAKjF,SAAS4I,GAAiBnN,EAASqC,GACxC,IAAI+K,EAAQ,EACZ,IAAK,IAAIxI,EAAI,EAAGA,EAAI5E,EAAQuB,OAAQqD,IAClCwI,GAASpN,EAAQ4E,GAAGtD,KAAKoG,OAAO1F,GAAKA,EAAEK,QAAUA,GAAOd,OAE1D,OAAO6L,CACT,CDIA,QAEEhM,KAAM,WACNuL,MAAO,CACL3M,QAASyL,MACTxL,UAAW,CACT0F,KAAM8F,MACN4B,QAASA,IAAM9I,KAGnBwI,QAAS,CAAEI,iBAAgBA,KEnB7B,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,URgGA,IACE/L,KAAM,YACNkM,WAAY,CAAEC,SAAQ,GAAEC,SAAQA,IAChCC,OAAAA,GACE/J,KAAK1D,QAAU,CACb,CAAEoB,KAAM,KAAMsM,MAAM,EAAOtB,UAAU,EAAMuB,KAAM,EAAGrM,KAAM,IAC1D,CAAEF,KAAM,MAAOsM,MAAM,EAAMtB,UAAU,EAAOuB,KAAM,EAAGrM,KAAM,IAC3D,CAAEF,KAAM,MAAOsM,MAAM,EAAMtB,UAAU,EAAOuB,KAAM,EAAGrM,KAAM,IAC3D,CAAEF,KAAM,MAAOsM,MAAM,EAAMtB,UAAU,EAAOuB,KAAM,EAAGrM,KAAM,IAE/D,EACAsM,IAAAA,GACE,MAAO,CAEL5N,QAAS,GAETC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzES,YAAa,EACbgG,WAAY,EACZ9D,YAAa,GACbkB,OAAQ,KACRH,gBAAiB,GACjBjC,aAAc,GACdwC,aAAc,KACdG,eAAgB,CAAC,EAErB,EACAwJ,MAAO,CACLnM,aAAc,CACZoM,OAAAA,GACEpK,KAAKqK,UAAU,KACb,MAAMC,EAAOtK,KAAKuK,MAAMC,YACpBF,GACFG,sBAAsB,KACpBH,EAAKI,UAAYJ,EAAKK,aAEtBF,sBAAsB,KACpBH,EAAKI,UAAYJ,EAAKK,kBAKhC,EACAC,MAAM,IAGVxB,SAAU,CAER1J,OAAAA,GACE,OAAOM,KAAK1D,QAAQ0D,KAAKhD,aAAagN,MAAwB,OAAhBhK,KAAKI,QAAmD,IAAhCJ,KAAKC,gBAAgBpC,MAC7F,EAEAgC,OAAAA,GACE,MAAMgL,EAAY7K,KAAK8K,mBACvB,OAAO9K,KAAK1D,QAAQ0D,KAAKhD,aAAagN,MAAwB,OAAhBhK,KAAKI,QAAgD,IAA7BJ,KAAKhC,aAAaH,QAAgBgN,EAAUnN,OAASsC,KAAK1D,QAAQ0D,KAAKhD,aAAaU,IAC5J,GAEF2L,QAAS,CAEP9I,SAAAA,GACE,MAAMQ,EAAOE,EAAQH,KACfU,EAAQD,EAAKR,GACnB,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrBlB,KAAK1D,QAAQ4E,GAAGtD,KAAO4D,EAAMN,GAC7BlB,KAAK+K,aAAa/K,KAAK1D,QAAQ4E,IAEjClB,KAAKhD,YAAc,EACnBgD,KAAKd,YAAc,GACnBc,KAAKhC,aAAe,GACpBgC,KAAKI,OAAS,KACdJ,KAAKC,gBAAkB,EACzB,EAEA6K,gBAAAA,GACE,IAAK,IAAI5J,EAAIlB,KAAKhC,aAAaH,OAAS,EAAGqD,GAAK,EAAGA,IACjD,GAAIlB,KAAKhC,aAAakD,GAAG9C,OAAS4B,KAAKhC,aAAakD,GAAG9C,MAAMP,OAAS,EACpE,OAAOmC,KAAKhC,aAAakD,GAG7B,OAAO,IACT,EAEA6J,YAAAA,CAAanO,GACX,IAAK,IAAIsE,EAAI,EAAGA,EAAItE,EAAOgB,KAAKC,OAAQqD,IACtC,GAA4B,MAAxBtE,EAAOgB,KAAKsD,GAAGzC,MAAyC,MAAzB7B,EAAOgB,KAAKsD,GAAGvC,MAEhD,YADA/B,EAAOqN,KAAO,EAIpB,EAEAzK,SAAAA,GACE,MAAM5C,EAASoD,KAAK1D,QAAQ0D,KAAKhD,aACjC,GAAoC,IAAhCgD,KAAKC,gBAAgBpC,OAAc,OACvC,MAAM+E,EAAS5C,KAAKC,gBAAgBsC,QAAQd,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GACzDqJ,EAAWpI,EAAOD,IAAIzB,GAAKtE,EAAOgB,KAAKsD,IAEvC2J,EAAY7K,KAAK8K,mBAEvB,IAAI9I,EAAY,GAKhB,GAJI6I,GAAaA,EAAUnN,OAASd,EAAOc,OACzCsE,EAAY6I,EAAUzM,OAGnB0D,EAAYkJ,EAAUhJ,GAA3B,CAKAhC,KAAKd,YAAc8L,EAEnBhL,KAAKhC,aAAagD,KAAK,CAAEtD,KAAMd,EAAOc,KAAMU,MAAO4M,EAASrI,IAAIrE,IAAA,IAAUA,OAE1E,IAAK,IAAI4C,EAAI0B,EAAO/E,OAAS,EAAGqD,GAAK,EAAGA,IACtCtE,EAAOgB,KAAKqN,OAAOrI,EAAO1B,GAAI,GAEhClB,KAAKC,gBAAkB,GAEvBD,KAAKkL,cAELlL,KAAKmL,UAbL,MAFEC,MAAM,MAgBV,EAEA5M,YAAAA,CAAaC,GACX,MAAa,MAATA,GAAyB,MAATA,EAAqB,WAC5B,MAATA,GAAyB,MAATA,EAAqB,aAClC,EACT,EAEA0B,YAAAA,CAAatD,GACX,GAAyB,IAArBmD,KAAKhD,aAAqC,OAAhBgD,KAAKI,OAAiB,OACpD,MAAMc,EAAIlB,KAAKC,gBAAgB2B,QAAQ/E,GAGrCmD,KAAKC,iBAFI,IAAPiB,EAEqB,IAAIlB,KAAKC,gBAAiBpD,GAE1BmD,KAAKC,gBAAgB+D,OAAO7C,GAAKA,IAAMtE,EAElE,EAEA+C,IAAAA,GACmC,IAA7BI,KAAKhC,aAAaH,QACpBuN,MAAM,YAER,MAAMxO,EAASoD,KAAK1D,QAAQ0D,KAAKhD,aAEjCgD,KAAKhC,aAAagD,KAAK,CAAEtD,KAAMd,EAAOc,KAAMU,MAAO,KACnD4B,KAAKd,YAAc,GACnBc,KAAKmL,UACP,EAEAA,QAAAA,GACE,GAAoB,OAAhBnL,KAAKI,OAAiB,OAC1BJ,KAAKhD,aAAegD,KAAKhD,YAAc,GAAK,EAC5CgD,KAAKgD,aACL,MAAMpG,EAASoD,KAAK1D,QAAQ0D,KAAKhD,aAC7BJ,EAAOoN,MACThK,KAAK+C,QAET,EAEAA,MAAAA,GACE,MAAMsI,EAAKrL,KAAK1D,QAAQ0D,KAAKhD,aACzBqO,EAAGzN,KAAKC,OAAS,EACnByN,WAAW,KAET,MAAMT,EAAY7K,KAAK8K,mBAEvB,IAAI9I,EAAY,GACZ6I,GAAaA,EAAUnN,OAAS2N,EAAG3N,OACrCsE,EAAY6I,EAAUzM,OAExB,MAAM4M,EAAWjI,EACfsI,EAAGzN,KACHoE,EACAhC,KAAKgD,WACLhD,KAAK1D,QACL0D,KAAKhD,YACLgD,KAAKhC,cAEHgN,GAAYA,EAASnN,OAAS,GAChCmC,KAAKd,YAAc8L,EAEnBhL,KAAKhC,aAAagD,KAAK,CAAEtD,KAAM2N,EAAG3N,KAAMU,MAAO4M,EAASrI,IAAIrE,IAAA,IAAUA,OACtE+M,EAAGzN,KAAOyN,EAAGzN,KAAKoG,OAChB1F,IAAM0M,EAASrG,KAAK4G,GAAOA,EAAI9M,OAASH,EAAEG,MAAQ8M,EAAI5M,QAAUL,EAAEK,UAIpEqB,KAAKhC,aAAagD,KAAK,CAAEtD,KAAM2N,EAAG3N,KAAMU,MAAO,KAC/C4B,KAAKd,YAAc,IAErBc,KAAKkL,cACLlL,KAAKmL,YACJ,IAAsB,IAAhB/J,KAAKE,WAEdtB,KAAKd,YAAc,GACnBc,KAAKkL,cACLlL,KAAKmL,WAET,EAEAD,WAAAA,GACE,IAAK,IAAIhK,EAAI,EAAGA,EAAI,EAAGA,IACe,IAAhClB,KAAK1D,QAAQ4E,GAAGtD,KAAKC,SACvBmC,KAAKI,OAASc,EAGpB,EACA9D,QAAAA,CAASP,GACPmD,KAAKQ,aAAe3D,EACpBmD,KAAKW,eAAiB,CACpB6K,SAAU,QACV5D,KAAM,MACN6D,IAAK,MACLC,UAAW,wBACXC,OAAQ,IACRC,WAAY,OACZC,OAAQ,iBACRC,QAAS,MACTC,UAAW,6BACXC,aAAc,MACdC,SAAU,QACVC,UAAW,QAEf,EACA3O,QAAAA,GACEyC,KAAKQ,aAAe,IACtB,GAGF2L,OAAAA,GACEnM,KAAKO,WACP,GS3UF,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,UVCA,IACE7C,KAAM,MACNkM,WAAY,CACVwC,UAASA,IAEXlC,IAAAA,GACE,MAAO,CACL3O,UAAU,EAEd,GWZF,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS8Q,KAEpE,WCNAC,EAAAA,EAAAA,IAAUC,IAAKC,MAAM,O,GCFjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASxM,EAAI,EAAGA,EAAIiM,EAAStP,OAAQqD,IAAK,CACrCoM,EAAWH,EAASjM,GAAG,GACvBqM,EAAKJ,EAASjM,GAAG,GACjBsM,EAAWL,EAASjM,GAAG,GAE3B,IAJA,IAGIyM,GAAY,EACPxM,EAAI,EAAGA,EAAImM,EAASzP,OAAQsD,MACpB,EAAXqM,GAAsBC,GAAgBD,IAAaI,OAAOC,KAAKnB,EAAoBU,GAAG5H,MAAM,SAAS3J,GAAO,OAAO6Q,EAAoBU,EAAEvR,GAAKyR,EAASnM,GAAK,GAChKmM,EAASrC,OAAO9J,IAAK,IAErBwM,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASlC,OAAO/J,IAAK,GACrB,IAAI4M,EAAIP,SACEV,IAANiB,IAAiBT,EAASS,EAC/B,CACD,CACA,OAAOT,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAItM,EAAIiM,EAAStP,OAAQqD,EAAI,GAAKiM,EAASjM,EAAI,GAAG,GAAKsM,EAAUtM,IAAKiM,EAASjM,GAAKiM,EAASjM,EAAI,GACrGiM,EAASjM,GAAK,CAACoM,EAAUC,EAAIC,EAwB/B,C,eC5BAd,EAAoBqB,EAAI,SAAShB,GAChC,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,WAAa,OAAOlB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBwB,EAAEF,EAAQ,CAAEtM,EAAGsM,IAC5BA,CACR,C,eCNAtB,EAAoBwB,EAAI,SAASpB,EAASqB,GACzC,IAAI,IAAItS,KAAOsS,EACXzB,EAAoB0B,EAAED,EAAYtS,KAAS6Q,EAAoB0B,EAAEtB,EAASjR,IAC5E+R,OAAOS,eAAevB,EAASjR,EAAK,CAAEyS,YAAY,EAAMC,IAAKJ,EAAWtS,IAG3E,C,eCPA6Q,EAAoB8B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOzO,MAAQ,IAAIkJ,SAAS,cAAb,EAChB,CAAE,MAAOwF,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBjC,EAAoB0B,EAAI,SAASQ,EAAKC,GAAQ,OAAOjB,OAAOkB,UAAUC,eAAe9B,KAAK2B,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,GAaNtC,EAAoBU,EAAEjM,EAAI,SAAS8N,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BjF,GAC/D,IAKIyC,EAAUsC,EALV3B,EAAWpD,EAAK,GAChBkF,EAAclF,EAAK,GACnBmF,EAAUnF,EAAK,GAGIhJ,EAAI,EAC3B,GAAGoM,EAAS3I,KAAK,SAASxJ,GAAM,OAA+B,IAAxB6T,EAAgB7T,EAAW,GAAI,CACrE,IAAIwR,KAAYyC,EACZ1C,EAAoB0B,EAAEgB,EAAazC,KACrCD,EAAoBQ,EAAEP,GAAYyC,EAAYzC,IAGhD,GAAG0C,EAAS,IAAIhC,EAASgC,EAAQ3C,EAClC,CAEA,IADGyC,GAA4BA,EAA2BjF,GACrDhJ,EAAIoM,EAASzP,OAAQqD,IACzB+N,EAAU3B,EAASpM,GAChBwL,EAAoB0B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOvC,EAAoBU,EAAEC,EAC9B,EAEIiC,EAAqBC,KAAK,sBAAwBA,KAAK,uBAAyB,GACpFD,EAAmBpJ,QAAQgJ,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBtO,KAAOkO,EAAqBM,KAAK,KAAMF,EAAmBtO,KAAKwO,KAAKF,G,IC/CvF,IAAIG,EAAsB/C,EAAoBU,OAAEP,EAAW,CAAC,KAAM,WAAa,OAAOH,EAAoB,KAAO,GACjH+C,EAAsB/C,EAAoBU,EAAEqC,E","sources":["webpack://jihei5/./src/App.vue","webpack://jihei5/./src/components/GameTable.vue","webpack://jihei5/./src/game/core.js","webpack://jihei5/./src/game/rules.js","webpack://jihei5/./src/game/ai.js","webpack://jihei5/./src/components/CardHand.vue","webpack://jihei5/./src/components/CardHand.vue?010b","webpack://jihei5/./src/components/Recorder.vue","webpack://jihei5/./src/game/recorder.js","webpack://jihei5/./src/components/Recorder.vue?cc80","webpack://jihei5/./src/components/GameTable.vue?dac4","webpack://jihei5/./src/App.vue?c03f","webpack://jihei5/./src/main.js","webpack://jihei5/webpack/bootstrap","webpack://jihei5/webpack/runtime/chunk loaded","webpack://jihei5/webpack/runtime/compat get default export","webpack://jihei5/webpack/runtime/define property getters","webpack://jihei5/webpack/runtime/global","webpack://jihei5/webpack/runtime/hasOwnProperty shorthand","webpack://jihei5/webpack/runtime/jsonp chunk loading","webpack://jihei5/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <button v-if=\"!showGame\" @click=\"showGame = true\">开始</button>\n    <GameTable v-if=\"showGame\" />\n  </div>\n</template>\n\n<script>\nimport GameTable from './components/GameTable.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    GameTable\n  },\n  data() {\n    return {\n      showGame: false\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\r\n  <div class=\"game-table\">\r\n    <!-- 新增顶部容器，包含记牌器和玩家卡片 -->\r\n    <div class=\"top-container\">\r\n      <!-- 记牌器放最上方 -->\r\n      <div class=\"recorder-top-bar\">\r\n        <div class=\"recorder-top-inner\">\r\n          <Recorder :players=\"players\" :cardOrder=\"cardOrder\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"ai-row-on-top\">\r\n        <!-- 所有玩家横向并排标签卡，悬浮在记牌器同一层 -->\r\n        <div class=\"ai-block-wrap\">\r\n          <div\r\n            v-for=\"(player, idx) in players\"\r\n            :key=\"idx\"\r\n            :class=\"['player-tab', { active: currentTurn === idx, me: idx === 0 }]\"\r\n            @mouseenter=\"showHand(idx)\"\r\n            @mouseleave=\"hideHand\"\r\n          >\r\n            <span class=\"player-label\">{{ idx === 0 ? '我' : player.name }}</span>\r\n            <span class=\"player-hand-count\">剩余：{{ player.hand.length }} 张</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-center\">\r\n      <div class=\"current-play history-scroll\" ref=\"historyScroll\">\r\n        <div>出牌记录：</div>\r\n        <div v-if=\"historyPlays.length\" ref=\"historyList\" class=\"history-list\">\r\n          <div v-for=\"(item, idx) in historyPlays\" :key=\"idx\" class=\"history-item\">\r\n            <span class=\"history-name\">{{ item.name }}：</span>\r\n            <span v-if=\"item.cards.length\" class=\"history-cards\">\r\n              <span v-for=\"(c, cidx) in item.cards\" :key=\"cidx\" :class=\"['card-item', getSuitClass(c.suit)]\">\r\n                <span class=\"card-corner top-left\">\r\n                  <span class=\"corner-value\" :class=\"getSuitClass(c.suit)\">{{ c.value }}</span>\r\n                  <span class=\"corner-suit\" :class=\"getSuitClass(c.suit)\">{{ c.suit }}</span>\r\n                </span>\r\n                <span class=\"card-corner bottom-right\">\r\n                  <span class=\"corner-value\" :class=\"getSuitClass(c.suit)\">{{ c.value }}</span>\r\n                  <span class=\"corner-suit\" :class=\"getSuitClass(c.suit)\">{{ c.suit }}</span>\r\n                </span>\r\n              </span>\r\n            </span>\r\n            <span v-else class=\"history-pass\">不要</span>\r\n          </div>\r\n        </div>\r\n        <div v-else>无</div>\r\n      </div>\r\n    </div>\r\n    <!-- 当前出牌 + 当前轮到 -->\r\n    <div class=\"fixed-play-info\">\r\n      <div class=\"current-play-area\">\r\n        <div class=\"play-area-label\">当前出牌：</div>\r\n        <div class=\"play-area-cards\">\r\n          <template v-if=\"currentPlay && currentPlay.length\">\r\n            <span v-for=\"(c, idx) in currentPlay\" :key=\"idx\" :class=\"['card-item', getSuitClass(c.suit)]\">\r\n              <span class=\"card-corner top-left\">\r\n                <span class=\"corner-value\" :class=\"getSuitClass(c.suit)\">{{ c.value }}</span>\r\n                <span class=\"corner-suit\" :class=\"getSuitClass(c.suit)\">{{ c.suit }}</span>\r\n              </span>\r\n              <span class=\"card-corner bottom-right\">\r\n                <span class=\"corner-value\" :class=\"getSuitClass(c.suit)\">{{ c.value }}</span>\r\n                <span class=\"corner-suit\" :class=\"getSuitClass(c.suit)\">{{ c.suit }}</span>\r\n              </span>\r\n            </span>\r\n          </template>\r\n          <span v-else class=\"play-pass\">不要</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 底部手牌与操作区 -->\r\n    <div class=\"bottom-bar\">\r\n      <div class=\"actions\">\r\n        <button @click=\"playCards\" :disabled=\"canPlay\">出牌</button>\r\n        <button @click=\"pass\" :disabled=\"canPass\">不要</button>\r\n      </div>\r\n      <CardHand\r\n        :hand=\"players[this.currentTurn].hand\"\r\n        :selectedIndexes=\"selectedIndexes\"\r\n        :getSuitClass=\"getSuitClass\"\r\n        @toggleSelect=\"toggleSelect\"\r\n      />\r\n    </div>\r\n    <div v-if=\"winner !== null\" class=\"winner-modal\">\r\n      <div class=\"winner-content\">\r\n        <div>胜者：{{ players[winner].name }}</div>\r\n        <button @click=\"startGame\">再来一局</button>\r\n      </div>\r\n    </div>\r\n    <!-- 悬浮手牌浮层 -->\r\n    <div v-if=\"hoverHandIdx !== null\" :style=\"hoverHandStyle\" class=\"hand-tooltip-debug\">\r\n      <CardHand :hand=\"players[hoverHandIdx].hand\" :selectedIndexes=\"[]\" :getSuitClass=\"getSuitClass\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { createDeck, shuffle, deal } from '../game/core';\r\nimport { aiPlay } from '../game/ai';\r\nimport { isValidPlay } from '../game/rules';\r\nimport CardHand from './CardHand.vue';\r\nimport Recorder from './Recorder.vue';\r\n\r\nexport default {\r\n  name: 'GameTable',\r\n  components: { CardHand, Recorder },\r\n  created() {\r\n    this.players = [\r\n      { name: '自己', isAI: false, isBanker: true, team: 0, hand: [] },\r\n      { name: 'AI1', isAI: true, isBanker: false, team: 1, hand: [] },\r\n      { name: 'AI2', isAI: true, isBanker: false, team: 1, hand: [] },\r\n      { name: 'AI3', isAI: true, isBanker: false, team: 1, hand: [] },\r\n    ];\r\n  },\r\n  data() {\r\n    return {\r\n      // 四个玩家，0为自己，1-3为AI\r\n      players: [],\r\n      // 记牌器用的牌面顺序\r\n      cardOrder: ['4', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A', '2', '3', '5'],\r\n      currentTurn: 0, // 当前轮到的玩家索引\r\n      playNumber: 0, // 游戏出牌次数\r\n      currentPlay: [], // 当前桌面上的出牌\r\n      winner: null, // 胜者索引\r\n      selectedIndexes: [], // 选中的手牌索引\r\n      historyPlays: [], // 出牌历史，{name, cards:[]}对象数组\r\n      hoverHandIdx: null,\r\n      hoverHandStyle: {},\r\n    };\r\n  },\r\n  watch: {\r\n    historyPlays: {\r\n      handler() {\r\n        this.$nextTick(() => {\r\n          const list = this.$refs.historyList;\r\n          if (list) {\r\n            requestAnimationFrame(() => {\r\n              list.scrollTop = list.scrollHeight;\r\n              // 双重保险确保滚动到底部\r\n              requestAnimationFrame(() => {\r\n                list.scrollTop = list.scrollHeight;\r\n              });\r\n            });\r\n          }\r\n        });\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  computed: {\r\n    // 是否可以出牌（仅自己且未结束）\r\n    canPlay() {\r\n      return this.players[this.currentTurn].isAI || this.winner !== null || this.selectedIndexes.length === 0;\r\n    },\r\n    // 是否可以不要（仅自己且未结束）\r\n    canPass() {\r\n      const lastValid = this.getLastValidPlay();\r\n      return this.players[this.currentTurn].isAI || this.winner !== null || this.historyPlays.length === 0 || lastValid.name === this.players[this.currentTurn].name;\r\n    },\r\n  },\r\n  methods: {\r\n    // 初始化并开始新一局游戏\r\n    startGame() {\r\n      const deck = shuffle(createDeck()); // 洗牌\r\n      const hands = deal(deck); // 发牌\r\n      for (let i = 0; i < 4; i++) {\r\n        this.players[i].hand = hands[i]; // 分配手牌\r\n        this.hasBlackFive(this.players[i]); // 分配队伍\r\n      }\r\n      this.currentTurn = 0; // 从自己开始\r\n      this.currentPlay = []; // 清空当前出牌\r\n      this.historyPlays = []; // 清空出牌历史\r\n      this.winner = null; // 清空胜者索引\r\n      this.selectedIndexes = []; // 清空选中的手牌索引\r\n    },\r\n    // 获取上一个有效出牌（非不要），返回 {name, cards} 或 null\r\n    getLastValidPlay() {\r\n      for (let i = this.historyPlays.length - 1; i >= 0; i--) {\r\n        if (this.historyPlays[i].cards && this.historyPlays[i].cards.length > 0) {\r\n          return this.historyPlays[i];\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    // 判断手里是否有黑桃五\r\n    hasBlackFive(player) {\r\n      for (let i = 0; i < player.hand.length; i++) {\r\n        if (player.hand[i].suit === '♥' && player.hand[i].value === '5') {\r\n          player.team = 0;\r\n          return;\r\n        }\r\n      }\r\n    },\r\n    // 玩家出牌（根据选择的牌）\r\n    playCards() {\r\n      const player = this.players[this.currentTurn];\r\n      if (this.selectedIndexes.length === 0) return;\r\n      const sorted = this.selectedIndexes.slice().sort((a, b) => a - b); // (a, b) => a - b是排序函数\r\n      const outCards = sorted.map(i => player.hand[i]);\r\n      // 获取上家有效出牌\r\n      const lastValid = this.getLastValidPlay();\r\n      // 如果上家有效出牌是自己，则lastCards为空，允许任意出牌\r\n      let lastCards = [];\r\n      if (lastValid && lastValid.name !== player.name) {\r\n        lastCards = lastValid.cards;\r\n      }\r\n      // 出牌合法性校验\r\n      if (!isValidPlay(outCards, lastCards)) {\r\n        alert('手牌小');\r\n        return;\r\n      }\r\n      // 赋值本轮出牌\r\n      this.currentPlay = outCards;\r\n      // 记录本轮出牌\r\n      this.historyPlays.push({ name: player.name, cards: outCards.map(c => ({...c})) });\r\n      // 从手牌中移除出牌\r\n      for (let i = sorted.length - 1; i >= 0; i--) {\r\n        player.hand.splice(sorted[i], 1);\r\n      }\r\n      this.selectedIndexes = [];\r\n      // 检查胜者\r\n      this.checkWinner();\r\n      // 切换到下一个玩家\r\n      this.nextTurn();\r\n    },\r\n    // 根据花色返回对应class\r\n    getSuitClass(suit) {\r\n      if (suit === '♥' || suit === '♦') return 'red-suit';\r\n      if (suit === '♠' || suit === '♣') return 'black-suit';\r\n      return '';\r\n    },\r\n    // 切换选中/取消选中某张牌\r\n    toggleSelect(idx) {\r\n      if (this.currentTurn !== 0 || this.winner !== null) return;\r\n      const i = this.selectedIndexes.indexOf(idx);\r\n      if (i === -1) {\r\n        // 用新数组赋值，保证响应式\r\n        this.selectedIndexes = [...this.selectedIndexes, idx];\r\n      } else {\r\n        this.selectedIndexes = this.selectedIndexes.filter(j => j !== idx);\r\n      }\r\n    },\r\n    // 玩家选择不要\r\n    pass() {\r\n      if (this.historyPlays.length === 0) {\r\n        alert('第一次不允许不出');\r\n      }\r\n      const player = this.players[this.currentTurn];\r\n      // 记录本轮出牌\r\n      this.historyPlays.push({ name: player.name, cards: [] });\r\n      this.currentPlay = [];\r\n      this.nextTurn();\r\n    },\r\n    // 切换到下一个玩家\r\n    nextTurn() {\r\n      if (this.winner !== null) return; // 已有胜者则不再轮转\r\n      this.currentTurn = (this.currentTurn + 1) % 4;\r\n      this.playNumber++;\r\n      const player = this.players[this.currentTurn];\r\n      if (player.isAI) {\r\n        this.aiPlay();\r\n      }\r\n    },\r\n    // AI出牌逻辑，调用ai.js，带延时\r\n    aiPlay() {\r\n      const ai = this.players[this.currentTurn];\r\n      if (ai.hand.length > 0) {\r\n        setTimeout(() => {\r\n          // 获取上家有效出牌\r\n          const lastValid = this.getLastValidPlay();\r\n          // 如果上家有效出牌是当前AI，则lastCards为空\r\n          let lastCards = [];\r\n          if (lastValid && lastValid.name !== ai.name) {\r\n            lastCards = lastValid.cards;\r\n          }\r\n          const outCards = aiPlay(\r\n            ai.hand,\r\n            lastCards,\r\n            this.playNumber,\r\n            this.players,\r\n            this.currentTurn,\r\n            this.historyPlays\r\n          );\r\n          if (outCards && outCards.length > 0) {\r\n            this.currentPlay = outCards;\r\n            // 记录AI出牌\r\n            this.historyPlays.push({ name: ai.name, cards: outCards.map(c => ({...c})) });\r\n            ai.hand = ai.hand.filter(\r\n              c => !outCards.some(sel => sel.suit === c.suit && sel.value === c.value)\r\n            );\r\n          } else {\r\n            // AI选择不要\r\n            this.historyPlays.push({ name: ai.name, cards: [] });\r\n            this.currentPlay = [];\r\n          }\r\n          this.checkWinner();\r\n          this.nextTurn();\r\n        }, 700 + Math.random() * 800); // 700~1500ms\r\n      } else {\r\n        this.currentPlay = [];\r\n        this.checkWinner();\r\n        this.nextTurn();\r\n      }\r\n    },\r\n    // 检查是否有玩家出完牌，设置胜者\r\n    checkWinner() {\r\n      for (let i = 0; i < 4; i++) {\r\n        if (this.players[i].hand.length === 0) {\r\n          this.winner = i;\r\n        }\r\n      }\r\n    },\r\n    showHand(idx) {\r\n      this.hoverHandIdx = idx;\r\n      this.hoverHandStyle = {\r\n        position: 'fixed',\r\n        left: '50%',\r\n        top: '21%',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 1000,\r\n        background: '#fff',\r\n        border: '1px solid #ccc',\r\n        padding: '8px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n        borderRadius: '4px',\r\n        minWidth: '180px',\r\n        minHeight: '100px',\r\n      };\r\n    },\r\n    hideHand() {\r\n      this.hoverHandIdx = null;\r\n    },\r\n  },\r\n  // 组件挂载后自动开始游戏\r\n  mounted() {\r\n    this.startGame();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 新增顶部容器样式 */\r\n.top-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  z-index: 30;\r\n}\r\n/**** 桌面端基础样式 ****/\r\n\r\n\r\n.top-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  z-index: 30;\r\n}\r\n/**** 桌面端基础样式 ****/\r\n.game-table {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #f8fafc;\r\n  overflow: hidden;\r\n  z-index: 9;\r\n}\r\n.players { display: flex; justify-content: space-around; margin-bottom: 20px; flex-wrap: wrap; }\r\n.ai-row-on-top {\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 0;\r\n  padding-bottom: 4px;\r\n  background: #f8fafc;\r\n}\r\n.ai-block-wrap {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 16px;\r\n  justify-content: center;\r\n  width: auto;\r\n  background: transparent;\r\n  pointer-events: auto;\r\n}\r\n.ai-block-wrap {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 8px;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n.player-tab {\r\n  min-width: 68px;\r\n  max-width: 90px;\r\n  background: #f8fafc; /* 与记牌器背景一致 */\r\n  border-radius: 6px;\r\n  padding: 4px 4px 2px 4px;\r\n  box-shadow: 0 1px 2px #eee;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 2px solid #d0d0d0;\r\n  transition: border 0.2s, background 0.2s, box-shadow 0.2s;\r\n  font-size: 13px;\r\n  line-height: 1.1;\r\n}\r\n.player-tab.me {\r\n  font-weight: bold;\r\n}\r\n.player-tab.active {\r\n  border: 2px solid #42b983;\r\n  background: #e3f9f1;\r\n  box-shadow: 0 2px 8px #b2f2e5;\r\n}\r\n.player-label {\r\n  font-size: 14px;\r\n  margin-bottom: 1px;\r\n}\r\n.player-hand-count {\r\n  color: #888;\r\n  font-size: 12px;\r\n  margin-top: 1px;\r\n}\r\n.player.me { border: 2px solid #42b983; padding: 10px; border-radius: 8px; background: #e3f9f1; }\r\n.hand { margin: 8px 0; min-height: 38px; }\r\n.hand .selected {\r\n  background: #ffe082;\r\n  border-radius: 4px;\r\n  padding: 2px 4px;\r\n  box-shadow: 0 2px 8px #ffd54f;\r\n  border: 1.5px solid #ffb300;\r\n}\r\n.red-suit { color: #e53935; }\r\n.black-suit { color: #222; }\r\n.club-suit { color: #388e3c; }\r\n.suit-symbol { font-size: 18px; font-weight: bold; margin-right: 1px; }\r\n.ai-block { background: #f3f3f3; border-radius: 8px; padding: 8px 12px; margin: 0 4px; min-width: 90px; box-shadow: 0 1px 4px #eee; }\r\n.ai-title { font-weight: bold; color: #888; margin-bottom: 4px; }\r\n.ai-hand { color: #666; }\r\n.current-play { font-size: 14px; margin-bottom: 4px; }\r\n.current-turn { font-size: 13px; }\r\n.current-turn .me { color: #42b983; font-weight: bold; }\r\n.winner-modal { position: fixed; left: 0; top: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.18); display: flex; align-items: center; justify-content: center; z-index: 100; }\r\n.winner-content { background: #fff; border-radius: 12px; padding: 32px 40px; box-shadow: 0 4px 24px #bbb; text-align: center; font-size: 22px; }\r\n.winner-content button { margin-top: 18px; font-size: 18px; background: #42b983; color: #fff; border: none; border-radius: 6px; padding: 8px 24px; cursor: pointer; }\r\n/* 底部手牌与操作区固定样式 */\r\n.bottom-bar {\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100vw;\r\n  background: #f8fafc;\r\n  box-shadow: 0 -2px 12px #e0e0e0;\r\n  z-index: 10;\r\n  padding: 2px 0 2px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.bottom-bar .actions {\r\n  margin-top: 2px;\r\n}\r\n\r\n\r\n/* 统一卡片样式，完全同步 CardHand.vue 的 .card-item 及相关样式 */\r\n.card-item {\r\n  user-select: none;\r\n  position: relative;\r\n  width: 44px;\r\n  height: 70px;\r\n  text-align: left;\r\n  box-shadow: 0 2px 8px #bbb;\r\n  transition: all .2s;\r\n  border-radius: 7px;\r\n  background: #fff;\r\n  border: 1.5px solid #cccccc;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n}\r\n.card-corner {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 15px;\r\n  line-height: 1;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n.top-left {\r\n  top: 4px;\r\n  left: 5px;\r\n  text-align: left;\r\n}\r\n.bottom-right {\r\n  bottom: 4px;\r\n  right: 5px;\r\n  text-align: right;\r\n  align-items: flex-end;\r\n}\r\n.corner-value {\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  line-height: 1;\r\n}\r\n.corner-suit {\r\n  font-size: 13px;\r\n  margin-top: 1px;\r\n}\r\n.red-suit { color: #e53935; }\r\n.black-suit { color: #222; }\r\n.club-suit { color: #388e3c; }\r\n\r\n/* 出牌记录滚动区域 */\r\n.table-center {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  padding: 10px;\r\n  margin-top: 80px;\r\n  height: 100%;\r\n  margin-bottom: 336px; /* 增加下边距 */\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.current-play.history-scroll {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  padding: 10px 0;\r\n  height: 100%;\r\n  /* 添加滚动行为平滑过渡 */\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n.history-list {\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  min-height: 0;\r\n}\r\n.history-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 2px;\r\n  font-size: 13px;\r\n}\r\n.history-name {\r\n  font-weight: bold;\r\n  margin-right: 4px;\r\n}\r\n.history-cards {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 4px;\r\n  align-items: center;\r\n}\r\n.history-pass {\r\n  color: #aaa;\r\n  margin-left: 2px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .game-table {\r\n    padding: 2px;\r\n    border-radius: 0;\r\n    box-shadow: none;\r\n    max-width: 100vw;\r\n    min-height: 100vh;\r\n    padding-top: 60px; /* 顶部记牌器高度适配，略大 */\r\n  }\r\n  .recorder-top-bar {\r\n    align-items: flex-start;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    justify-content: center;\r\n    min-height: unset;\r\n    height: auto;\r\n    background: #f8fafc;\r\n    box-shadow: 0 1px 4px #e0e0e0;\r\n    overflow: visible;\r\n  }\r\n  .recorder-top-inner {\r\n    transform: scale(0.7);\r\n    transform-origin: top center;\r\n    margin-top: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: visible;\r\n    min-width: max-content;\r\n  }\r\n  .players {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin-bottom: 6px;\r\n    gap: 4px;\r\n  }\r\n  .ai-block {\r\n    min-width: 0;\r\n    font-size: 13px;\r\n    padding: 4px 2px;\r\n    margin: 1px 0;\r\n  }\r\n  .hand {\r\n    min-height: 22px;\r\n    font-size: 13px;\r\n  }\r\n  .hand .selected {\r\n    background: #ffe082;\r\n    border-radius: 4px;\r\n    padding: 2px 4px;\r\n    box-shadow: 0 2px 8px #ffd54f;\r\n    border: 1.5px solid #ffb300; /* 保持选中状态的边框样式不变 */\r\n  }\r\n  .suit-symbol {\r\n    font-size: 13px;\r\n  }\r\n  .current-play, .current-turn {\r\n    font-size: 13px;\r\n  }\r\n  .winner-content {\r\n    padding: 10px 4px;\r\n    font-size: 15px;\r\n  }\r\n  .winner-content button {\r\n    font-size: 13px;\r\n    padding: 4px 8px;\r\n  }\r\n  .bottom-bar {\r\n    padding: 2px 0 2px 0;\r\n    bottom: 0;\r\n    min-height: 54px;\r\n  }\r\n  .bottom-bar .actions {\r\n    margin-top: 2px;\r\n  }\r\n  .bottom-bar button {\r\n    font-size: 14px;\r\n    padding: 4px 10px;\r\n  }\r\n  .history-scroll {\r\n    max-height: 460px;\r\n    padding: 2px 2px;\r\n    font-size: 12px;\r\n    touch-action: none;\r\n  }\r\n  .fixed-play-info {\r\n    height: 60px; /* 移动端高度从90px减小到60px */\r\n    bottom: 145px;\r\n    padding: 5px 0;\r\n  }\r\n}\r\n/* 让顶部记牌器样式居中 */\r\n.recorder-top-bar {\r\n  width: 100vw;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: #f8fafc;\r\n  box-shadow: 0 2px 8px #e0e0e0;\r\n  overflow: visible;\r\n}\r\n.recorder-top-inner {\r\n  margin: 0 auto;\r\n  padding: 8px 0 0 0;\r\n  overflow: visible;\r\n}\r\n/* 出牌区样式 */\r\n.current-play-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 6px;\r\n}\r\n.play-area-label {\r\n  font-size: 13px;\r\n  color: #888;\r\n  margin-bottom: 2px;\r\n}\r\n.play-area-cards {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 4px;\r\n  min-height: 32px;\r\n  align-items: center;\r\n}\r\n.play-pass {\r\n  color: #aaa;\r\n  font-size: 15px;\r\n  padding: 0 8px;\r\n}\r\n/* 禁止页面整体滚动，防止抖动和内容被遮挡 */\r\n:global(html), :global(body) {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 固定区域样式 */\r\n.fixed-play-info {\r\n  position: fixed;\r\n  bottom: 120px; /* 位于手牌区域上方 */\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 130px; /* 高度从100px减小到70px */\r\n  background: #f8fafc;\r\n  padding: 8px 0;\r\n  box-shadow: 0 -2px 10px rgba(0,0,0,0.05);\r\n  z-index: 9; /* 确保在手牌区域上方但在顶部容器下方 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.hand-tooltip-debug {\r\n  pointer-events: none;\r\n  min-width: 120px;\r\n  min-height: 80px;\r\n  position: fixed;\r\n}\r\n</style>\r\n","// 挤黑5棋牌核心逻辑模块\r\n// core.js：负责全副牌生成、洗牌、发牌等基础操作\r\n\r\n/**\r\n * 所有花色\r\n * @type {string[]}\r\n */\r\nexport const SUITS = ['♠','♥','♣','♦'];\r\n\r\n/**\r\n * 牌面点数顺序（特殊顺序，5最大）\r\n * @type {string[]}\r\n */\r\nexport const CARD_ORDER = ['4', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A', '2', '3', '5'];\r\n\r\n/**\r\n * 生成一副完整的牌（共13种点数*4花色=52张）\r\n * @returns {Array<{suit:string,value:string}>}\r\n */\r\nexport function createDeck() {\r\n  const deck = [];\r\n  for (const suit of SUITS) {\r\n    for (const value of CARD_ORDER) {\r\n      deck.push({ suit, value });\r\n    }\r\n  }\r\n  return deck;\r\n}\r\n\r\n/**\r\n * 洗牌（Fisher-Yates算法，原地打乱）\r\n * @param {Array} deck - 牌堆\r\n * @returns {Array} 洗好的牌堆\r\n */\r\nexport function shuffle(deck) {\r\n  for (let i = deck.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [deck[i], deck[j]] = [deck[j], deck[i]];\r\n  }\r\n  return deck;\r\n}\r\n\r\n/**\r\n * 发牌，将牌堆均分为4份，并按牌值从小到大排序\r\n * @param {Array} deck - 已洗好的牌堆\r\n * @returns {Array[]} hands - 4个玩家的手牌数组\r\n */\r\nexport function deal(deck) {\r\n  const hands = [[], [], [], []];\r\n  for (let i = 0; i < deck.length; i++) {\r\n    hands[i % 4].push(deck[i]);\r\n  }\r\n  // 按牌值顺序排序每个玩家手牌\r\n  for (let i = 0; i < 4; i++) {\r\n    hands[i].sort((a, b) => CARD_ORDER.indexOf(a.value) - CARD_ORDER.indexOf(b.value));\r\n  }\r\n  return hands;\r\n}\r\n","// rules.js：牌型判断、牌值比较\r\nimport { CARD_ORDER } from './core';\r\n\r\n/** * 比较两张牌的大小\r\n * @param {Object} a - 第一张牌\r\n * @param {Object} b - 第二张牌\r\n * @returns {number} - 返回值大于0表示a大于b，小于0表示a小于b，等于0表示相等\r\n */\r\nexport function compareCard(a, b) {\r\n  return CARD_ORDER.indexOf(a.value) - CARD_ORDER.indexOf(b.value);\r\n}\r\n\r\n/**\r\n * 判断当前出牌是否可以压过上家\r\n * @param {Array} selectedCards - 当前要出的牌\r\n * @param {Array} lastCards - 上家出的牌（桌面牌）\r\n * @returns {boolean}\r\n */\r\nexport function isValidPlay(selectedCards, lastCards) {\r\n  // 不能出空牌\r\n  if (!selectedCards || selectedCards.length === 0) return false;\r\n  const type = getCardType(selectedCards);\r\n  if (type === 'invalid') return false;\r\n  // 桌面无牌，任意合法牌型可出\r\n  if (!lastCards || lastCards.length === 0) return true;\r\n  const lastType = getCardType(lastCards);\r\n  // 牌型不同，炸弹能压一切，轰能压除炸弹外的所有\r\n  if (type === 'bomb' && lastType !== 'bomb') return true;\r\n  if (type === 'triple' && lastType !== 'bomb' && lastType !== 'triple') return true;\r\n  if (type !== lastType) return false;\r\n  // 牌型相同，数量必须相同\r\n  if (selectedCards.length !== lastCards.length) return false;\r\n  // 比较大小\r\n  const sortedSel = sortCards(selectedCards);\r\n  const sortedLast = sortCards(lastCards);\r\n  // 只比较第一张即可\r\n  return compareCard(sortedSel[0], sortedLast[0]) > 0;\r\n}\r\n\r\nexport function sortCards(cards) {\r\n  return cards.slice().sort(compareCard);\r\n}\r\n\r\n// 判断牌型\r\nexport function getCardType(cards) {\r\n  if (cards.length === 2 && cards[0].value === cards[1].value) return 'pair';\r\n  if (cards.length === 3 && cards[0].value === cards[1].value && cards[1].value === cards[2].value) return 'triple'; // 轰\r\n  if (cards.length === 4 && cards[0].value === cards[1].value && cards[1].value === cards[2].value && cards[2].value === cards[3].value) return 'bomb'; // 炸\r\n  if (isStraight(cards)) return 'straight';\r\n  if (isDoubleStraight(cards)) return 'doubleStraight';\r\n  if (cards.length === 1) return 'single';\r\n  return 'invalid';\r\n}\r\n\r\n// 判断是否为顺子\r\n// 顺子：3张或以上连续点数的牌，不能有重复\r\nfunction isStraight(cards) {\r\n  if (cards.length < 3) return false;\r\n  const idxs = cards.map(c => CARD_ORDER.indexOf(c.value)).sort((a, b) => a - b);\r\n  for (let i = 1; i < idxs.length; i++) {\r\n    if (idxs[i] - idxs[i - 1] !== 1) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// 判断是否为连对\r\n// 连对：2张或以上连续点数的对子，且每个对子必须相同\r\n// 例如：66、77、88、99\r\nfunction isDoubleStraight(cards) {\r\n  if (cards.length < 4 || cards.length % 2 !== 0) return false;\r\n  const sorted = cards.slice().sort(compareCard);\r\n  for (let i = 0; i < sorted.length; i += 2) {\r\n    if (sorted[i].value !== sorted[i + 1].value) return false;\r\n    if (i > 0) {\r\n      // 当前对子\r\n      const curr = CARD_ORDER.indexOf(sorted[i].value);\r\n      // 当前对子后一个对子\r\n      const prev = CARD_ORDER.indexOf(sorted[i - 2].value);\r\n      \r\n      if (curr - prev !== 1) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","// ai.js：AI出牌逻辑\r\nimport { isValidPlay, sortCards } from './rules';\r\n\r\n/**\r\n * 更智能的AI出牌：\r\n * - 桌面有牌时，优先使用桌面牌组类型进行压制，若有最小能压过该类型牌组，需要考虑是否拆开了最优牌组，若拆开了最优牌组，则不出，\r\n *   若已经是最优牌组则出，（不轻易拆炸弹/顺子/连对），如对方出炸弹可用更大炸弹压制\r\n * - 桌面无牌时，优先出顺子、连对、对子、单牌等减少手牌数量的组合\r\n * - 只在必要时拆牌或出炸弹\r\n * - 前几回合避免出轰和炸弹\r\n * @param {Array} hand - AI当前手牌\r\n * @param {Array} lastCards - 桌面牌\r\n * @param {number} playNumber - 游戏出牌次数\r\n * @param {Array} players - 所有玩家信息（含team、isBanker、hand等）\r\n * @param {number} playerIndex - 当前AI在players中的索引\r\n * @returns {Array} 要出的牌数组，不能出则返回空数组\r\n */\r\nexport function aiPlay(hand, lastCards = [], playNumber, players = [], playerIndex = 0, historyPlays = []) {\r\n  // 回合\r\n  const round = playNumber % 4 + 1;\r\n  if (!hand || hand.length === 0) return [];\r\n  const sorted = sortCards(hand);\r\n\r\n  // 团队协作信息（动态推断队友）\r\n  const teammateIndexes = getTeammateIndexesWithSpade5(playerIndex, players, historyPlays);\r\n  const nextPlayerIdx = getNextPlayerIndex(playerIndex, players.length || 4);\r\n  const nextPlayerHandCount = players && players[nextPlayerIdx] ? players[nextPlayerIdx].hand.length : 99;\r\n  const prevPlayerIdx = (playerIndex + players.length - 1) % players.length;\r\n  const prevPlayer = players && players[prevPlayerIdx] ? players[prevPlayerIdx] : null;\r\n  const prevPlayerIsTeammate = teammateIndexes.includes(prevPlayerIdx);\r\n  const prevPlayerHandCount = prevPlayer ? prevPlayer.hand.length : 99;\r\n\r\n  // 分类组合\r\n  const combos = getOptimalCombos(sorted, round, hand.length);\r\n  const triples = combos.filter(c => c.length === 3 && isTriple(c));\r\n  const bombs = combos.filter(c => c.length === 4 && isBomb(c));\r\n  const straights = combos.filter(c => c.length >= 3 && isStraightFast(c));\r\n  const doubleStraights = combos.filter(c => c.length >= 4 && isDoubleStraightFast(c));\r\n  const pairs = combos.filter(c => c.length === 2 && isPair(c));\r\n  const singles = combos.filter(c => c.length === 1);\r\n\r\n  // 团队协作策略\r\n  // 1. 桌面有牌，且上家是队友，且队友手牌<=2，优先让牌\r\n  if (lastCards && lastCards.length > 0 && prevPlayerIsTeammate && prevPlayerHandCount <= 2) {\r\n    // 只要不是炸弹/轰，优先不要\r\n    return [];\r\n  }\r\n  // 2. 桌面无牌，队友手牌<=2，优先出最小单张或对子\r\n  if ((!lastCards || lastCards.length === 0) && teammateIndexes.some(idx => players[idx].hand.length <= 2)) {\r\n    if (singles.length > 0) return singles[0];\r\n    if (pairs.length > 0) return pairs[0];\r\n    // 其次顺子、连对\r\n    if (straights.length > 0) return straights[0];\r\n    if (doubleStraights.length > 0) return doubleStraights[0];\r\n    if (triples.length > 0) return triples[0];\r\n    if (bombs.length > 0) return bombs[0];\r\n    return [sorted[0]];\r\n  }\r\n  // 3. 对手快走完时（下家手牌<=2），优先压制\r\n  if (nextPlayerHandCount <= 2) {\r\n    // 桌面有牌时，优先用能压制的最小组合\r\n    if (lastCards && lastCards.length > 0) {\r\n      for (const c of combos) {\r\n        if (isValidPlay(c, lastCards)) return c;\r\n      }\r\n      return [];\r\n    }\r\n    // 桌面无牌时，优先出对子、顺子等\r\n    if (pairs.length > 0) return pairs[0];\r\n    if (straights.length > 0) return straights[0];\r\n    if (doubleStraights.length > 0) return doubleStraights[0];\r\n    if (singles.length > 0) return singles[0];\r\n    if (triples.length > 0) return triples[0];\r\n    if (bombs.length > 0) return bombs[0];\r\n    return [sorted[0]];\r\n  }\r\n  // 其它情况，走原有AI逻辑\r\n  // 桌面有牌\r\n  if (lastCards && lastCards.length > 0) {\r\n    // 1. 如果对方是三张（轰），只能用更大的三张或炸弹压\r\n    if (isTriple(lastCards)) {\r\n      // 前几回合避免出轰和炸弹\r\n      if (round <= 3) {\r\n        for (const b of bombs) {\r\n          if (isValidPlay(b, lastCards)) return b;\r\n        }\r\n        return [];\r\n      }\r\n      for (const t of triples) {\r\n        if (isValidPlay(t, lastCards)) return t;\r\n      }\r\n      for (const b of bombs) {\r\n        if (isValidPlay(b, lastCards)) return b;\r\n      }\r\n      return [];\r\n    }\r\n    // 2. 如果对方是5个以上的顺子或6个以上的连对，前三回合可以用轰或炸弹压\r\n    if (round <= 3 && (isLongStraight(lastCards) || isLongDoubleStraight(lastCards))) {\r\n      for (const t of triples) {\r\n        if (isValidPlay(t, lastCards)) return t;\r\n      }\r\n      for (const b of bombs) {\r\n        if (isValidPlay(b, lastCards)) return b;\r\n      }\r\n    }\r\n    // 2. 如果对方是炸弹，尝试用更大的炸弹压\r\n    if (isBomb(lastCards)) {\r\n      for (const b of bombs) {\r\n        if (isValidPlay(b, lastCards)) return b;\r\n      }\r\n      return [];\r\n    }\r\n    // 3. 如果对方是顺子，尝试用顺子压制，允许拆顺子\r\n    if (isStraightFast(lastCards)) {\r\n      // 先找不拆的顺子\r\n      for (const s of straights) {\r\n        if (isValidPlay(s, lastCards)) return s;\r\n      }\r\n      // 尝试拆顺子\r\n      const splitStraight = findSplittableStraightToBeat(lastCards, sorted);\r\n      if (splitStraight) return splitStraight;\r\n      // 还可以考虑炸弹\r\n      for (const b of bombs) {\r\n        if (isValidPlay(b, lastCards)) return b;\r\n      }\r\n      return [];\r\n    }\r\n    // 4. 如果对方是连对，尝试用连对压制，允许拆连对\r\n    if (isDoubleStraightFast(lastCards)) {\r\n      // 先找不拆的连对\r\n      for (const ds of doubleStraights) {\r\n        if (isValidPlay(ds, lastCards)) return ds;\r\n      }\r\n      // 尝试拆连对\r\n      const splitDoubleStraight = findSplittableDoubleStraightToBeat(lastCards, sorted);\r\n      if (splitDoubleStraight) return splitDoubleStraight;\r\n      // 还可以考虑炸弹\r\n      for (const b of bombs) {\r\n        if (isValidPlay(b, lastCards)) return b;\r\n      }\r\n      return [];\r\n    }\r\n    // 3. 先找同类型最小能压过的（不拆炸弹/顺子/三张）\r\n    for (const c of combos) {\r\n      if (!isBomb(c) && !isTriple(c) && isValidPlay(c, lastCards)) {\r\n        if (!wouldBreakOptimalCombo(c, sorted, combos)) {\r\n          // 优先选择单张或对子\r\n          if (c.length === 1 || c.length === 2) return c;\r\n        }\r\n      }\r\n    }\r\n    // 4. 其次考虑三张、顺子、连对（不拆大牌）\r\n    for (const c of combos) {\r\n      if (!isBomb(c) && isValidPlay(c, lastCards)) {\r\n        if (!wouldBreakOptimalCombo(c, sorted, combos)) {\r\n          return c;\r\n        }\r\n      }\r\n    }\r\n    // 5. 最后实在不行才考虑拆顺子/三张/炸弹\r\n    for (const c of combos) {\r\n      if (isValidPlay(c, lastCards)) return c;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // 桌面无牌，优先出最小单张或对子，除非手牌>=5才优先出顺子/三张等\r\n  if (hand.length > 5) {\r\n    // 前几回合避免出轰和炸弹\r\n    if (round <= 3) {\r\n      if (straights.length > 0) return straights[0];\r\n      if (doubleStraights.length > 0) return doubleStraights[0];\r\n      if (pairs.length > 0) return pairs[0];\r\n      if (singles.length > 0) return singles[0];\r\n      if (triples.length > 0) return triples[0];\r\n      if (bombs.length > 0) return bombs[0];\r\n      // 新增：尝试主动拆三张/四张组成顺子或连对\r\n      const splitCombo = findSplitTripleOrBombForStraightOrDoubleStraight(sorted);\r\n      if (splitCombo) return splitCombo;\r\n    } else {\r\n      if (straights.length > 0) return straights[0];\r\n      if (doubleStraights.length > 0) return doubleStraights[0];\r\n      if (triples.length > 0) return triples[0];\r\n      if (pairs.length > 0) return pairs[0];\r\n      if (singles.length > 0) return singles[0];\r\n      if (bombs.length > 0) return bombs[0];\r\n      // 新增：尝试主动拆三张/四张组成顺子或连对\r\n      const splitCombo = findSplitTripleOrBombForStraightOrDoubleStraight(sorted);\r\n      if (splitCombo) return splitCombo;\r\n    }\r\n    return [sorted[0]];\r\n  } else {\r\n    // 剩余5张及以下，优先出能减少手牌数量的组合\r\n    if (singles.length > 0) return singles[0];\r\n    if (pairs.length > 0) return pairs[0];\r\n    if (triples.length > 0) return triples[0];\r\n    if (straights.length > 0) return straights[0];\r\n    if (doubleStraights.length > 0) return doubleStraights[0];\r\n    if (bombs.length > 0) return bombs[0];\r\n    // 新增：尝试主动拆三张/四张组成顺子或连对\r\n    const splitCombo = findSplitTripleOrBombForStraightOrDoubleStraight(sorted);\r\n    if (splitCombo) return splitCombo;\r\n    return [sorted[0]];\r\n  }\r\n}\r\n\r\n// 判断是否炸弹\r\nfunction isBomb(cards) {\r\n  return cards.length === 4 && cards.every(c => c.value === cards[0].value);\r\n}\r\n// 判断是否三张\r\nfunction isTriple(cards) {\r\n  return cards.length === 3 && cards.every(c => c.value === cards[0].value);\r\n}\r\n// 判断是否对子\r\nfunction isPair(cards) {\r\n  return cards.length === 2 && cards[0].value === cards[1].value;\r\n}\r\n\r\n// 判断是否会拆最优组合\r\nfunction wouldBreakOptimalCombo(combo, hand, optimalCombos) {\r\n  for (const optimal of optimalCombos) {\r\n    if (optimal.some(card => combo.includes(card)) && !arraysEqual(optimal, combo)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction arraysEqual(a, b) {\r\n  if (a.length !== b.length) return false;\r\n  for (let i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * 获取最优的出牌组合\r\n * 策略：优先选择顺子、连对、对子、单牌，避免重复花色，炸弹和轰权重最低\r\n * 前几回合避免出轰和炸弹\r\n * @param {Array} hand - 手牌\r\n * @param {number} round - 当前回合\r\n * @param {number} handSize - 手牌数量\r\n * @returns {Array} 最优组合数组\r\n */\r\nfunction getOptimalCombos(hand, round, handSize) {\r\n  const combos = [];\r\n  const usedCards = new Set(); // 记录已使用的牌\r\n\r\n  // 1. 先找炸弹 - 权重最低，但优先整体保留\r\n  const bombs = findBombs(hand, usedCards);\r\n  bombs.forEach(bomb => bomb.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n  // 2. 再找三张（轰）- 权重较低，但优先整体保留\r\n  const triples = findTriples(hand, usedCards);\r\n  triples.forEach(triple => triple.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n\r\n  // 3. 找顺子（长度3及以上，不能用已被三张/炸弹占用的牌）\r\n  const straights = findStraights(hand, usedCards);\r\n  straights.forEach(straight => straight.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n\r\n  // 4. 找连对（长度4及以上且为偶数，不能用已被三张/炸弹占用的牌）\r\n  const doubleStraights = findDoubleStraights(hand, usedCards);\r\n  doubleStraights.forEach(ds => ds.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n\r\n  // 5. 找对子（不能用已被三张/炸弹/顺子/连对占用的牌）\r\n  const pairs = findPairs(hand, usedCards);\r\n  pairs.forEach(pair => pair.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n\r\n  // 6. 找单牌（不能用已被三张/炸弹/顺子/连对/对子占用的牌）\r\n  const singles = findSingles(hand, usedCards);\r\n  singles.forEach(single => single.forEach(card => usedCards.add(`${card.suit}${card.value}`)));\r\n\r\n  // 按优先级排序：顺子 > 连对 > 对子 > 单牌 > 三张 > 炸弹\r\n  combos.push(...straights, ...doubleStraights, ...pairs, ...singles);\r\n  // 轰和炸弹最后加（但整体保留，不会被对子/单张拆分）\r\n  if (round > 3 || handSize <= 5) {\r\n    combos.push(...triples, ...bombs);\r\n  } else {\r\n    // 前几回合不主动出轰和炸弹\r\n    // 但如果没有其他组合可出，后续aiPlay会考虑拆\r\n  }\r\n  return combos;\r\n}\r\n\r\n// 找顺子（避免重复花色）\r\nfunction findStraights(hand, usedCards) {\r\n  const straights = [];\r\n  for (let len = 3; len <= hand.length; len++) {\r\n    for (let i = 0; i <= hand.length - len; i++) {\r\n      const slice = hand.slice(i, i + len);\r\n      if (isStraightFast(slice) && !hasRepeatedSuit(slice) && !hasUsedCards(slice, usedCards)) {\r\n        straights.push(slice);\r\n        // 标记已使用的牌\r\n        slice.forEach(card => usedCards.add(`${card.suit}${card.value}`));\r\n      }\r\n    }\r\n  }\r\n  return straights;\r\n}\r\n\r\n// 找连对（避免重复花色）\r\nfunction findDoubleStraights(hand, usedCards) {\r\n  const doubleStraights = [];\r\n  for (let len = 4; len <= hand.length; len += 2) {\r\n    for (let i = 0; i <= hand.length - len; i++) {\r\n      const slice = hand.slice(i, i + len);\r\n      if (isDoubleStraightFast(slice) && !hasRepeatedSuit(slice) && !hasUsedCards(slice, usedCards)) {\r\n        doubleStraights.push(slice);\r\n        slice.forEach(card => usedCards.add(`${card.suit}${card.value}`));\r\n      }\r\n    }\r\n  }\r\n  return doubleStraights;\r\n}\r\n\r\n// 找对子（避免重复花色）\r\nfunction findPairs(hand, usedCards) {\r\n  const pairs = [];\r\n  for (let i = 0; i < hand.length - 1; i++) {\r\n    if (hand[i].value === hand[i + 1].value && !hasUsedCards([hand[i], hand[i + 1]], usedCards)) {\r\n      pairs.push([hand[i], hand[i + 1]]);\r\n      usedCards.add(`${hand[i].suit}${hand[i].value}`);\r\n      usedCards.add(`${hand[i + 1].suit}${hand[i + 1].value}`);\r\n    }\r\n  }\r\n  return pairs;\r\n}\r\n\r\n// 找单牌\r\nfunction findSingles(hand, usedCards) {\r\n  const singles = [];\r\n  for (const card of hand) {\r\n    if (!hasUsedCards([card], usedCards)) {\r\n      singles.push([card]);\r\n      usedCards.add(`${card.suit}${card.value}`);\r\n    }\r\n  }\r\n  return singles;\r\n}\r\n\r\n// 找三张（轰）\r\nfunction findTriples(hand, usedCards) {\r\n  const triples = [];\r\n  for (let i = 0; i < hand.length - 2; i++) {\r\n    if (hand[i].value === hand[i + 1].value && hand[i].value === hand[i + 2].value && \r\n        !hasUsedCards([hand[i], hand[i + 1], hand[i + 2]], usedCards)) {\r\n      triples.push([hand[i], hand[i + 1], hand[i + 2]]);\r\n      usedCards.add(`${hand[i].suit}${hand[i].value}`);\r\n      usedCards.add(`${hand[i + 1].suit}${hand[i + 1].value}`);\r\n      usedCards.add(`${hand[i + 2].suit}${hand[i + 2].value}`);\r\n    }\r\n  }\r\n  return triples;\r\n}\r\n\r\n// 找炸弹\r\nfunction findBombs(hand, usedCards) {\r\n  const bombs = [];\r\n  for (let i = 0; i < hand.length - 3; i++) {\r\n    if (hand[i].value === hand[i + 1].value && hand[i].value === hand[i + 2].value && \r\n        hand[i].value === hand[i + 3].value && !hasUsedCards([hand[i], hand[i + 1], hand[i + 2], hand[i + 3]], usedCards)) {\r\n      bombs.push([hand[i], hand[i + 1], hand[i + 2], hand[i + 3]]);\r\n      usedCards.add(`${hand[i].suit}${hand[i].value}`);\r\n      usedCards.add(`${hand[i + 1].suit}${hand[i + 1].value}`);\r\n      usedCards.add(`${hand[i + 2].suit}${hand[i + 2].value}`);\r\n      usedCards.add(`${hand[i + 3].suit}${hand[i + 3].value}`);\r\n    }\r\n  }\r\n  return bombs;\r\n}\r\n\r\n// 新增：允许拆顺子压制\r\nfunction findSplittableStraightToBeat(lastCards, hand) {\r\n  // lastCards是顺子，hand是已排序手牌\r\n  const neededLen = lastCards.length;\r\n  // 枚举所有长度为neededLen的组合\r\n  for (let i = 0; i <= hand.length - neededLen; i++) {\r\n    const slice = hand.slice(i, i + neededLen);\r\n    if (isStraightFast(slice) && isValidPlay(slice, lastCards)) {\r\n      return slice;\r\n    }\r\n  }\r\n  // 如果直接切片找不到，尝试所有组合\r\n  // 生成所有长度为neededLen的组合\r\n  const allCombos = getAllStraightCombos(hand, neededLen);\r\n  for (const combo of allCombos) {\r\n    if (isValidPlay(combo, lastCards)) {\r\n      return combo;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// 枚举所有长度为len的顺子组合\r\nfunction getAllStraightCombos(hand, len) {\r\n  const results = [];\r\n  // 用递归枚举所有组合\r\n  function dfs(path, start) {\r\n    if (path.length === len) {\r\n      if (isStraightFast(path)) results.push([...path]);\r\n      return;\r\n    }\r\n    for (let i = start; i < hand.length; i++) {\r\n      // 不允许同点数重复\r\n      if (path.length > 0 && hand[i].value === path[path.length - 1].value) continue;\r\n      path.push(hand[i]);\r\n      dfs(path, i + 1);\r\n      path.pop();\r\n    }\r\n  }\r\n  dfs([], 0);\r\n  return results;\r\n}\r\n\r\n// 新增：允许拆连对压制\r\nfunction findSplittableDoubleStraightToBeat(lastCards, hand) {\r\n  // lastCards是连对，hand是已排序手牌\r\n  const neededLen = lastCards.length;\r\n  // 枚举所有长度为neededLen的组合\r\n  for (let i = 0; i <= hand.length - neededLen; i++) {\r\n    const slice = hand.slice(i, i + neededLen);\r\n    if (isDoubleStraightFast(slice) && isValidPlay(slice, lastCards)) {\r\n      return slice;\r\n    }\r\n  }\r\n  // 如果直接切片找不到，尝试所有组合\r\n  // 生成所有长度为neededLen的组合\r\n  const allCombos = getAllDoubleStraightCombos(hand, neededLen);\r\n  for (const combo of allCombos) {\r\n    if (isValidPlay(combo, lastCards)) {\r\n      return combo;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// 枚举所有长度为len的连对组合\r\nfunction getAllDoubleStraightCombos(hand, len) {\r\n  const results = [];\r\n  // 用递归枚举所有组合\r\n  function dfs(path, start) {\r\n    if (path.length === len) {\r\n      if (isDoubleStraightFast(path)) results.push([...path]);\r\n      return;\r\n    }\r\n    for (let i = start; i < hand.length; i++) {\r\n      // 必须成对加入\r\n      if (i + 1 < hand.length && hand[i].value === hand[i + 1].value) {\r\n        // 不允许同点数重复\r\n        if (path.length > 0 && hand[i].value === path[path.length - 1].value) continue;\r\n        path.push(hand[i], hand[i + 1]);\r\n        dfs(path, i + 2);\r\n        path.pop();\r\n        path.pop();\r\n      }\r\n    }\r\n  }\r\n  dfs([], 0);\r\n  return results;\r\n}\r\n\r\n// 新增：主动拆三张/四张组成顺子或连对\r\nfunction findSplitTripleOrBombForStraightOrDoubleStraight(hand) {\r\n  // 1. 找所有三张和四张组合\r\n  const triples = [];\r\n  const bombs = [];\r\n  for (let i = 0; i < hand.length - 2; i++) {\r\n    if (hand[i].value === hand[i + 1].value && hand[i].value === hand[i + 2].value) {\r\n      triples.push([hand[i], hand[i + 1], hand[i + 2]]);\r\n    }\r\n  }\r\n  for (let i = 0; i < hand.length - 3; i++) {\r\n    if (hand[i].value === hand[i + 1].value && hand[i].value === hand[i + 2].value && hand[i].value === hand[i + 3].value) {\r\n      bombs.push([hand[i], hand[i + 1], hand[i + 2], hand[i + 3]]);\r\n    }\r\n  }\r\n  // 2. 尝试拆三张或四张，组成顺子\r\n  // 枚举所有三张/四张的拆分方式\r\n  for (const group of [...triples, ...bombs]) {\r\n    // 拆出单张\r\n    for (let mask = 1; mask < (1 << group.length) - 1; mask++) {\r\n      // mask表示拆出哪些牌\r\n      const left = [];\r\n      const removed = [];\r\n      let used = new Array(hand.length).fill(false);\r\n      // 标记group中被拆的牌\r\n      for (let j = 0, k = 0; j < hand.length; j++) {\r\n        if (k < group.length && hand[j] === group[k]) {\r\n          if (mask & (1 << k)) {\r\n            removed.push(hand[j]);\r\n            used[j] = true;\r\n          } else {\r\n            left.push(hand[j]);\r\n          }\r\n          k++;\r\n        } else if (!used[j]) {\r\n          left.push(hand[j]);\r\n        }\r\n      }\r\n      // 尝试用removed和left组成顺子\r\n      const tryHand = [...removed, ...left];\r\n      // 枚举所有长度>=3的顺子\r\n      for (let len = 3; len <= tryHand.length; len++) {\r\n        for (let i = 0; i <= tryHand.length - len; i++) {\r\n          const slice = tryHand.slice(i, i + len);\r\n          if (isStraightFast(slice)) {\r\n            // 拆后能组成顺子，返回该顺子\r\n            return slice;\r\n          }\r\n        }\r\n      }\r\n      // 尝试用removed和left组成连对\r\n      for (let len = 4; len <= tryHand.length; len += 2) {\r\n        for (let i = 0; i <= tryHand.length - len; i++) {\r\n          const slice = tryHand.slice(i, i + len);\r\n          if (isDoubleStraightFast(slice)) {\r\n            // 拆后能组成连对，返回该连对\r\n            return slice;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// 检查是否有重复花色\r\nfunction hasRepeatedSuit(cards) {\r\n  const suits = new Set();\r\n  for (const card of cards) {\r\n    if (suits.has(card.suit)) return true;\r\n    suits.add(card.suit);\r\n  }\r\n  return false;\r\n}\r\n\r\n// 检查是否包含已使用的牌\r\nfunction hasUsedCards(cards, usedCards) {\r\n  for (const card of cards) {\r\n    if (usedCards.has(`${card.suit}${card.value}`)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// 快速顺子判断（假设已排序）\r\nfunction isStraightFast(cards) {\r\n  if (cards.length < 3) return false;\r\n  for (let i = 1; i < cards.length; i++) {\r\n    if (cards[i].value === cards[i - 1].value) return false;\r\n    if (cards[i].value.charCodeAt(0) - cards[i - 1].value.charCodeAt(0) !== 1) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// 快速连对判断（假设已排序）\r\nfunction isDoubleStraightFast(cards) {\r\n  if (cards.length < 4 || cards.length % 2 !== 0) return false;\r\n  for (let i = 0; i < cards.length; i += 2) {\r\n    if (cards[i].value !== cards[i + 1].value) return false;\r\n    if (i > 0) {\r\n      if (cards[i].value.charCodeAt(0) - cards[i - 2].value.charCodeAt(0) !== 1) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// 判断是否为长顺子（5个以上）\r\nfunction isLongStraight(cards) {\r\n  return isStraightFast(cards) && cards.length >= 5;\r\n}\r\n\r\n// 判断是否为长连对（6个以上）\r\nfunction isLongDoubleStraight(cards) {\r\n  return isDoubleStraightFast(cards) && cards.length >= 6;\r\n}\r\n\r\n/**\r\n * 根据黑桃5和出牌历史动态推断队友\r\n * @param {number} playerIndex - 当前AI索引\r\n * @param {Array} players - 所有玩家\r\n * @param {Array} historyPlays - 出牌历史（含cards）\r\n * @returns {Array} teammateIndexes\r\n */\r\nfunction getTeammateIndexesWithSpade5(playerIndex, players, historyPlays) {\r\n  // 1. 检查黑桃5是否已被打出\r\n  let spade5Owner = null;\r\n  for (let i = 0; i < players.length; i++) {\r\n    if (players[i].hand.some(card => card.suit === '♠' && card.value === '5')) {\r\n      spade5Owner = i;\r\n      break;\r\n    }\r\n  }\r\n  // 2. 检查出牌历史\r\n  if (spade5Owner === null && historyPlays && historyPlays.length) {\r\n    for (const play of historyPlays) {\r\n      if (play.cards && play.cards.some(card => card.suit === '♠' && card.value === '5')) {\r\n        // 找到打出黑桃5的玩家\r\n        spade5Owner = players.findIndex(p => p.name === play.name);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // 3. 如果能确定黑桃5持有者\r\n  if (spade5Owner !== null) {\r\n    // 庄家和黑桃5持有者为一队\r\n    const teammateIndexes = players\r\n      .map((p, idx) => idx)\r\n      .filter(idx => (players[idx].isBanker || idx === spade5Owner) && idx !== playerIndex);\r\n    return teammateIndexes;\r\n  }\r\n  // 4. 否则，无法确定队友\r\n  return [];\r\n}\r\n\r\n// 获取下一个玩家索引\r\nfunction getNextPlayerIndex(currentIndex, totalPlayers) {\r\n  return (currentIndex + 1) % totalPlayers;\r\n}\r\n\r\n","<template>\r\n  <div class=\"hand-outer\">\r\n    <div class=\"hand\" ref=\"myHand\" :style=\"{ width: handWidth + 'px' }\">\r\n      <span v-for=\"(card, i) in hand\" :key=\"i\"\r\n        :class=\"[{ selected: selectedIndexes.includes(i) }, getSuitClass(card.suit), 'card-item']\"\r\n        @click=\"toggleSelect(i)\"\r\n        :style=\"{\r\n          left: (i * 22) + 'px',\r\n          zIndex: i,\r\n        }\"\r\n      >\r\n        <span class=\"card-corner top-left\">\r\n          <span class=\"corner-value\" :class=\"getSuitClass(card.suit)\">{{ card.value }}</span>\r\n          <span class=\"corner-suit\" :class=\"getSuitClass(card.suit)\">{{ card.suit }}</span>\r\n        </span>\r\n        <span class=\"card-corner bottom-right\">\r\n          <span class=\"corner-value\" :class=\"getSuitClass(card.suit)\">{{ card.value }}</span>\r\n          <span class=\"corner-suit\" :class=\"getSuitClass(card.suit)\">{{ card.suit }}</span>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CardHand',\r\n  props: {\r\n    hand: Array,\r\n    selectedIndexes: Array,\r\n    getSuitClass: Function\r\n  },\r\n  emits: ['toggleSelect'],\r\n  computed: {\r\n    handWidth() {\r\n      // 44px为单牌宽度，22px为重叠宽度\r\n      if (!this.hand || this.hand.length === 0) return 0;\r\n      if (this.hand.length === 1) return 44;\r\n      return 44 + (this.hand.length - 1) * 22;\r\n    }\r\n  },\r\n  methods: {\r\n    toggleSelect(i) {\r\n      this.$emit('toggleSelect', i);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.hand-outer {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n}\r\n.hand {\r\n  margin: 8px 0;\r\n  min-height: 70px;\r\n  min-width: 44px;\r\n  position: relative;\r\n  height: 90px;\r\n}\r\n.card-item {\r\n  cursor: pointer;\r\n  user-select: none;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 44px;\r\n  height: 70px;\r\n  text-align: left;\r\n  box-shadow: 0 2px 8px #bbb;\r\n  transition: all .2s;\r\n  border-radius: 7px;\r\n  background: #fff;\r\n  border: 1.5px solid #e0e0e0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n}\r\n.card-corner {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 15px;\r\n  line-height: 1;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n.top-left {\r\n  top: 4px;\r\n  left: 5px;\r\n  text-align: left;\r\n}\r\n.bottom-right {\r\n  bottom: 4px;\r\n  right: 5px;\r\n  text-align: right;\r\n  align-items: flex-end;\r\n}\r\n.corner-value {\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  line-height: 1;\r\n}\r\n.corner-suit {\r\n  font-size: 13px;\r\n  margin-top: 1px;\r\n}\r\n.hand .selected { background: #ffe082; box-shadow: 0 2px 8px #ffd54f; border: 2px solid #ffb300; }\r\n.red-suit { color: #e53935; }\r\n.black-suit { color: #222; }\r\n.club-suit { color: #388e3c; }\r\n</style>\r\n","import { render } from \"./CardHand.vue?vue&type=template&id=65454eae&scoped=true\"\nimport script from \"./CardHand.vue?vue&type=script&lang=js\"\nexport * from \"./CardHand.vue?vue&type=script&lang=js\"\n\nimport \"./CardHand.vue?vue&type=style&index=0&id=65454eae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f734b6141fecf191fd429c9851a327a4/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65454eae\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"recorder\">\r\n    <div class=\"recorder-title\">记牌器</div>\r\n    <div class=\"recorder-cards\">\r\n      <div class=\"recorder-row\">\r\n        <span v-for=\"v in cardOrder\" :key=\"v\" class=\"recorder-num\">{{ v }}</span>\r\n      </div>\r\n      <div class=\"recorder-row\">\r\n        <span v-for=\"v in cardOrder\" :key=\"v\" class=\"recorder-count\">{{ getCardLeftCount(players, v) }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCardLeftCount, CARD_ORDER } from '../game/recorder';\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'Recorder',\r\n  props: {\r\n    players: Array,\r\n    cardOrder: {\r\n      type: Array,\r\n      default: () => CARD_ORDER\r\n    }\r\n  },\r\n  methods: { getCardLeftCount }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.recorder { margin-top: 0; background: #fffbe7; border-radius: 8px; padding: 10px 16px; box-shadow: 0 1px 4px #ffe082; display: inline-block; }\r\n.recorder-title { font-weight: bold; color: #bfa100; margin-bottom: 4px; }\r\n.recorder-cards { display: flex; flex-direction: column; align-items: flex-start; }\r\n.recorder-row { display: flex; flex-direction: row; gap: 8px; margin-bottom: 2px; }\r\n.recorder-num { font-size: 18px; font-weight: bold; min-width: 32px; text-align: center; color: #333; }\r\n.recorder-count { background: #ffd54f; color: #222; border-radius: 8px; padding: 1px 0; font-weight: bold; min-width: 32px; text-align: center; font-size: 15px; margin-bottom: 2px; }\r\n/* 顶部记牌器样式 */\r\n.recorder-top-bar {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin-bottom: 8px;\r\n}\r\n.recorder-top-bar .recorder {\r\n  transform: scale(0.85);\r\n  transform-origin: top center;\r\n}\r\n</style>\r\n","// 记牌器逻辑模块\r\nexport const CARD_ORDER = ['4', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A', '2', '3', '5'];\r\nexport const SUITS = ['♠','♥','♣','♦'];\r\n\r\n// 获取某点数在其他玩家手牌中的剩余数量\r\n// 记牌器统计：其他玩家剩余牌值的个数\r\nexport function getCardLeftCount(players, value) {\r\n  let count = 0;\r\n  for (let i = 1; i < players.length; i++) {\r\n    count += players[i].hand.filter(c => c.value === value).length;\r\n  }\r\n  return count;\r\n}\r\n","import { render } from \"./Recorder.vue?vue&type=template&id=40ea67fe&scoped=true\"\nimport script from \"./Recorder.vue?vue&type=script&lang=js\"\nexport * from \"./Recorder.vue?vue&type=script&lang=js\"\n\nimport \"./Recorder.vue?vue&type=style&index=0&id=40ea67fe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f734b6141fecf191fd429c9851a327a4/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-40ea67fe\"]])\n\nexport default __exports__","import { render } from \"./GameTable.vue?vue&type=template&id=9dd90e4a&scoped=true\"\nimport script from \"./GameTable.vue?vue&type=script&lang=js\"\nexport * from \"./GameTable.vue?vue&type=script&lang=js\"\n\nimport \"./GameTable.vue?vue&type=style&index=0&id=9dd90e4a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f734b6141fecf191fd429c9851a327a4/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9dd90e4a\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=8c59df20\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=8c59df20&lang=css\"\n\nimport exportComponent from \"../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f734b6141fecf191fd429c9851a327a4/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkjihei5\"] = self[\"webpackChunkjihei5\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8774); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","$data","showGame","onClick","_cache","$event","_createBlock","_component_GameTable","key","class","ref","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_Recorder","players","cardOrder","_hoisted_5","_hoisted_6","_Fragment","_renderList","player","idx","_normalizeClass","active","currentTurn","me","onMouseenter","$options","showHand","onMouseleave","args","hideHand","_hoisted_8","_toDisplayString","name","_hoisted_9","hand","length","_hoisted_10","_hoisted_11","historyPlays","_hoisted_12","item","_hoisted_13","cards","_hoisted_14","c","cidx","getSuitClass","suit","_hoisted_15","value","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","currentPlay","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","playCards","disabled","canPlay","_hoisted_27","pass","canPass","_hoisted_28","_component_CardHand","this","selectedIndexes","onToggleSelect","toggleSelect","winner","_hoisted_29","_hoisted_30","startGame","hoverHandIdx","style","_normalizeStyle","hoverHandStyle","SUITS","CARD_ORDER","createDeck","deck","push","shuffle","i","j","Math","floor","random","deal","hands","sort","a","b","indexOf","compareCard","isValidPlay","selectedCards","lastCards","type","getCardType","lastType","sortedSel","sortCards","sortedLast","slice","isStraight","isDoubleStraight","idxs","map","sorted","curr","prev","aiPlay","playNumber","playerIndex","round","teammateIndexes","getTeammateIndexesWithSpade5","nextPlayerIdx","getNextPlayerIndex","nextPlayerHandCount","prevPlayerIdx","prevPlayer","prevPlayerIsTeammate","includes","prevPlayerHandCount","combos","getOptimalCombos","triples","filter","isTriple","bombs","isBomb","straights","isStraightFast","doubleStraights","isDoubleStraightFast","pairs","isPair","singles","some","t","isLongStraight","isLongDoubleStraight","s","splitStraight","findSplittableStraightToBeat","ds","splitDoubleStraight","findSplittableDoubleStraightToBeat","wouldBreakOptimalCombo","splitCombo","findSplitTripleOrBombForStraightOrDoubleStraight","every","combo","optimalCombos","optimal","card","arraysEqual","handSize","usedCards","Set","findBombs","forEach","bomb","add","findTriples","triple","findStraights","straight","findDoubleStraights","findPairs","pair","findSingles","single","len","hasRepeatedSuit","hasUsedCards","neededLen","allCombos","getAllStraightCombos","results","dfs","path","start","pop","getAllDoubleStraightCombos","group","mask","left","removed","used","Array","fill","k","tryHand","suits","has","charCodeAt","spade5Owner","play","findIndex","p","isBanker","currentIndex","totalPlayers","width","handWidth","$props","selected","props","Function","emits","computed","methods","$emit","__exports__","v","getCardLeftCount","count","default","components","CardHand","Recorder","created","isAI","team","data","watch","handler","$nextTick","list","$refs","historyList","requestAnimationFrame","scrollTop","scrollHeight","deep","lastValid","getLastValidPlay","hasBlackFive","outCards","splice","checkWinner","nextTurn","alert","ai","setTimeout","sel","position","top","transform","zIndex","background","border","padding","boxShadow","borderRadius","minWidth","minHeight","mounted","GameTable","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}